!function(t){var e={};function i(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},i.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=3)}([function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e,i){this._upperLeftPoint=t,this._side=e,this._lowerRightPoint=i}return Object.defineProperty(t.prototype,"upperLeftPoint",{get:function(){return this._upperLeftPoint},set:function(t){this._upperLeftPoint=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"side",{get:function(){return this._side},set:function(t){this._side=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"lowerRightPoint",{get:function(){return this._lowerRightPoint},set:function(t){this._lowerRightPoint=t},enumerable:!0,configurable:!0}),t.prototype.calculateLowerRightPoint=function(){this.lowerRightPoint.x=this.upperLeftPoint.x+this.side-1,this.lowerRightPoint.y=this.upperLeftPoint.y+this.side-1},t.prototype.calculateSide=function(){this.side=this.lowerRightPoint.x-this.upperLeftPoint.x+1},t}();e.ZoneShape=n},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e){this._x=t,this._y=e}return Object.defineProperty(t.prototype,"x",{get:function(){return this._x},set:function(t){this._x=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"y",{get:function(){return this._y},set:function(t){this._y=t},enumerable:!0,configurable:!0}),t}();e.Point=n},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=i(1),o=i(0),r=function(){function t(){this._isFirstStage=!0,this._isNewStage=!0,this._finalZoneShape=new o.ZoneShape(new n.Point(0,0),0,new n.Point(0,0)),this._currentZoneShape=new o.ZoneShape(new n.Point(0,0),0,new n.Point(0,0)),this._verticalDistancesRatio=0,this._horizontalDistancesRatio=0,this._topDistance=0,this._bottomDistance=0,this._leftDistance=0,this._rightDistance=0,this._verticalStepCount=0,this._horizontalStepCount=0}return Object.defineProperty(t.prototype,"isFirstStage",{get:function(){return this._isFirstStage},set:function(t){this._isFirstStage=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isNewStage",{get:function(){return this._isNewStage},set:function(t){this._isNewStage=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"finalZoneShape",{get:function(){return this._finalZoneShape},set:function(t){this._finalZoneShape=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"currentZoneShape",{get:function(){return this._currentZoneShape},set:function(t){this._currentZoneShape=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"verticalDistancesRatio",{get:function(){return this._verticalDistancesRatio},set:function(t){this._verticalDistancesRatio=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"horizontalDistancesRatio",{get:function(){return this._horizontalDistancesRatio},set:function(t){this._horizontalDistancesRatio=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"topDistance",{get:function(){return this._topDistance},set:function(t){this._topDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"bottomDistance",{get:function(){return this._bottomDistance},set:function(t){this._bottomDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"leftDistance",{get:function(){return this._leftDistance},set:function(t){this._leftDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rightDistance",{get:function(){return this._rightDistance},set:function(t){this._rightDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"verticalStepCount",{get:function(){return this._verticalStepCount},set:function(t){this._verticalStepCount=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"horizontalStepCount",{get:function(){return this._horizontalStepCount},set:function(t){this._horizontalStepCount=t},enumerable:!0,configurable:!0}),t.prototype.shrink=function(t,e,i,n,o,r){this.isFirstStage&&this.initializeFirstStage(t),this.isNewStage&&this.beginNewStage(t,e,i,o,r),this.continueCurrentStage(t,n,i)},t.prototype.initializeFirstStage=function(t){this.currentZoneShape.upperLeftPoint.x=0,this.currentZoneShape.upperLeftPoint.y=0,this.currentZoneShape.lowerRightPoint.x=t.length-1,this.currentZoneShape.lowerRightPoint.y=t[0].length-1,this.currentZoneShape.calculateSide(),this.isFirstStage=!1,this.isNewStage=!0},t.prototype.beginNewStage=function(t,e,i,n,o){this.clearBorder(t,o),this.calculateFinalZoneShape(e,i),this.calculateDistances(),this.calculateVerticalDistancesRatio(),this.calculateHorizontalDistancesRatio(),this.drawZoneBorderline(t,n),this.verticalStepCount=0,this.horizontalStepCount=0,this.isNewStage=!1},t.prototype.calculateFinalZoneShape=function(t,e){var i=this.currentZoneShape.side/t,n=Math.round(i);i=n<=e?e:n;var o=this.currentZoneShape.upperLeftPoint.x,r=this.currentZoneShape.lowerRightPoint.x-i+2,a=this.currentZoneShape.upperLeftPoint.y,h=this.currentZoneShape.lowerRightPoint.y-i+2,s=Math.floor(Math.random()*(r-o)+o),p=Math.floor(Math.random()*(h-a)+a);this.finalZoneShape.upperLeftPoint.x=s,this.finalZoneShape.upperLeftPoint.y=p,this.finalZoneShape.side=i,this.finalZoneShape.calculateLowerRightPoint()},t.prototype.calculateDistances=function(){this.topDistance=Math.abs(this.finalZoneShape.upperLeftPoint.y-this.currentZoneShape.upperLeftPoint.y),this.bottomDistance=Math.abs(this.currentZoneShape.lowerRightPoint.y-this.finalZoneShape.lowerRightPoint.y),this.leftDistance=Math.abs(this.finalZoneShape.upperLeftPoint.x-this.currentZoneShape.upperLeftPoint.x),this.rightDistance=Math.abs(this.currentZoneShape.lowerRightPoint.x-this.finalZoneShape.lowerRightPoint.x)},t.prototype.calculateVerticalDistancesRatio=function(){if(this.topDistance<=0||this.bottomDistance<=0)this.verticalDistancesRatio=0;else{var t=Math.max(this.topDistance,this.bottomDistance),e=Math.min(this.topDistance,this.bottomDistance);this.verticalDistancesRatio=Math.floor(t/e)}},t.prototype.calculateHorizontalDistancesRatio=function(){if(this.leftDistance<=0||this.rightDistance<=0)this.horizontalDistancesRatio=0;else{var t=Math.max(this.leftDistance,this.rightDistance),e=Math.min(this.leftDistance,this.rightDistance);this.horizontalDistancesRatio=Math.floor(t/e)}},t.prototype.continueCurrentStage=function(t,e,i){var n={topStep:0,bottomStep:0,leftStep:0,rightStep:0};this.shrinkVertically(t,e,n),this.shrinkHorizontally(t,e,n),this.shrinkSingleSizeZone(t,e,i),this.calculateCurrentZoneShape(n),this.checkIsFinalZoneReached()},t.prototype.shrinkVertically=function(t,e,i){var n=this.currentZoneShape.upperLeftPoint.y===this.finalZoneShape.upperLeftPoint.y,o=this.currentZoneShape.lowerRightPoint.y===this.finalZoneShape.lowerRightPoint.y,r=this.verticalStepCount===this.verticalDistancesRatio,a=this.currentZoneShape.upperLeftPoint.x,h=this.currentZoneShape.upperLeftPoint.y,s=this.currentZoneShape.lowerRightPoint.x,p=this.currentZoneShape.lowerRightPoint.y;if(n||o){if(n&&!o){for(c=a;c<=s;c++)t[c][p]=e;i.bottomStep++}else if(!n&&o){for(c=a;c<=s;c++)t[c][h]=e;i.topStep++}}else if(this.verticalStepCount++,this.topDistance>this.bottomDistance){i.topStep++;for(var c=a;c<=s;c++)t[c][h]=e,r&&(t[c][p]=e);r&&(i.bottomStep++,this.verticalStepCount=0)}else if(this.topDistance<this.bottomDistance){i.bottomStep++;for(var c=a;c<=s;c++)t[c][p]=e,r&&(t[c][h]=e);r&&(i.topStep++,this.verticalStepCount=0)}else{for(var c=a;c<=s;c++)t[c][h]=e,t[c][p]=e;i.topStep++,i.bottomStep++,this.verticalStepCount=0}},t.prototype.shrinkHorizontally=function(t,e,i){var n=this.currentZoneShape.upperLeftPoint.x===this.finalZoneShape.upperLeftPoint.x,o=this.currentZoneShape.lowerRightPoint.x===this.finalZoneShape.lowerRightPoint.x,r=this.horizontalStepCount===this.horizontalDistancesRatio,a=this.currentZoneShape.upperLeftPoint.x,h=this.currentZoneShape.upperLeftPoint.y,s=this.currentZoneShape.lowerRightPoint.x,p=this.currentZoneShape.lowerRightPoint.y;if(n||o){if(n&&!o){for(c=h;c<=p;c++)t[s][c]=e;i.rightStep++}else if(!n&&o){for(c=h;c<=p;c++)t[a][c]=e;i.leftStep++}}else if(this.horizontalStepCount++,this.leftDistance>this.rightDistance){i.leftStep++;for(var c=h;c<=p;c++)t[a][c]=e,r&&(t[s][c]=e);r&&(i.rightStep++,this.horizontalStepCount=0)}else if(this.leftDistance<this.rightDistance){i.rightStep++;for(var c=h;c<=p;c++)t[s][c]=e,r&&(t[a][c]=e);r&&(i.leftStep++,this.horizontalStepCount=0)}else{for(var c=h;c<=p;c++)t[a][c]=e,t[s][c]=e;i.leftStep++,i.rightStep++,this.horizontalStepCount=0}},t.prototype.shrinkSingleSizeZone=function(t,e,i){1===this.currentZoneShape.side&&i<1&&(t[this.currentZoneShape.upperLeftPoint.x][this.currentZoneShape.upperLeftPoint.y]=e)},t.prototype.calculateCurrentZoneShape=function(t){this.currentZoneShape.upperLeftPoint.x+=t.leftStep,this.currentZoneShape.upperLeftPoint.y+=t.topStep,this.currentZoneShape.lowerRightPoint.x-=t.rightStep,this.currentZoneShape.lowerRightPoint.y-=t.bottomStep,this.currentZoneShape.calculateSide()},t.prototype.checkIsFinalZoneReached=function(){this.currentZoneShape.upperLeftPoint.x===this.finalZoneShape.upperLeftPoint.x&&this.currentZoneShape.upperLeftPoint.y===this.finalZoneShape.upperLeftPoint.y&&this.currentZoneShape.side===this.finalZoneShape.side&&this.currentZoneShape.lowerRightPoint.x===this.finalZoneShape.lowerRightPoint.x&&this.currentZoneShape.lowerRightPoint.y===this.finalZoneShape.lowerRightPoint.y&&(this.isNewStage=!0)},t.prototype.drawZoneBorderline=function(t,e){for(var i=this.finalZoneShape.upperLeftPoint.x;i<=this.finalZoneShape.lowerRightPoint.x;i++)t[i][this.finalZoneShape.upperLeftPoint.y]=e,t[i][this.finalZoneShape.lowerRightPoint.y]=e;for(i=this.finalZoneShape.upperLeftPoint.y;i<=this.finalZoneShape.lowerRightPoint.y;i++)t[this.finalZoneShape.upperLeftPoint.x][i]=e,t[this.finalZoneShape.lowerRightPoint.x][i]=e},t.prototype.clearBorder=function(t,e){for(var i=this.finalZoneShape.upperLeftPoint.x;i<=this.finalZoneShape.lowerRightPoint.x;i++)t[i][this.finalZoneShape.upperLeftPoint.y]=e,t[i][this.finalZoneShape.lowerRightPoint.y]=e;for(i=this.finalZoneShape.upperLeftPoint.y;i<=this.finalZoneShape.lowerRightPoint.y;i++)t[this.finalZoneShape.upperLeftPoint.x][i]=e,t[this.finalZoneShape.lowerRightPoint.x][i]=e},t}();e.Zone=r},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});for(var n=i(2),o=new Array(18),r=0;r<18;r++)o[r]=new Array(18);for(r=0;r<18;r++)for(var a=0;a<18;a++)o[r][a]=" ";var h=new n.Zone,s=function(t){!function(e){setTimeout(function(){console.clear(),h.shrink(e,1.4,0,"∎",0," "),console.table(e)},1e3*t)}(o)};for(r=0;r<19;r++)s(r)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,