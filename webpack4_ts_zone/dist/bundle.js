!function(t){var e={};function i(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},i.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=3)}([function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e,i){this._upperLeftPoint=t,this._side=e,this._lowerRightPoint=i}return Object.defineProperty(t.prototype,"upperLeftPoint",{get:function(){return this._upperLeftPoint},set:function(t){this._upperLeftPoint=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"side",{get:function(){return this._side},set:function(t){this._side=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"lowerRightPoint",{get:function(){return this._lowerRightPoint},set:function(t){this._lowerRightPoint=t},enumerable:!0,configurable:!0}),t.prototype.calculateLowerRightPoint=function(){this.lowerRightPoint.x=this.upperLeftPoint.x+this.side-1,this.lowerRightPoint.y=this.upperLeftPoint.y+this.side-1},t.prototype.calculateSide=function(){this.side=this.lowerRightPoint.x-this.upperLeftPoint.x+1},t.prototype.getVerticalSide=function(){return this.lowerRightPoint.y-this.upperLeftPoint.y+1},t.prototype.getHorizontalSide=function(){return this.lowerRightPoint.x-this.upperLeftPoint.x+1},t}();e.ZoneShape=n},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e){this._x=t,this._y=e}return Object.defineProperty(t.prototype,"x",{get:function(){return this._x},set:function(t){this._x=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"y",{get:function(){return this._y},set:function(t){this._y=t},enumerable:!0,configurable:!0}),t}();e.Point=n},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=i(1),o=i(0),r=function(){function t(){this._isFirstStage=!0,this._isNewStage=!0,this._finalZoneShape=new o.ZoneShape(new n.Point(0,0),0,new n.Point(0,0)),this._currentZoneShape=new o.ZoneShape(new n.Point(0,0),0,new n.Point(0,0)),this._verticalDistancesRatio=0,this._horizontalDistancesRatio=0,this._topDistance=0,this._bottomDistance=0,this._leftDistance=0,this._rightDistance=0,this._verticalStepCount=0,this._horizontalStepCount=0}return Object.defineProperty(t.prototype,"isFirstStage",{get:function(){return this._isFirstStage},set:function(t){this._isFirstStage=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isNewStage",{get:function(){return this._isNewStage},set:function(t){this._isNewStage=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"finalZoneShape",{get:function(){return this._finalZoneShape},set:function(t){this._finalZoneShape=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"currentZoneShape",{get:function(){return this._currentZoneShape},set:function(t){this._currentZoneShape=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"verticalDistancesRatio",{get:function(){return this._verticalDistancesRatio},set:function(t){this._verticalDistancesRatio=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"horizontalDistancesRatio",{get:function(){return this._horizontalDistancesRatio},set:function(t){this._horizontalDistancesRatio=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"topDistance",{get:function(){return this._topDistance},set:function(t){this._topDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"bottomDistance",{get:function(){return this._bottomDistance},set:function(t){this._bottomDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"leftDistance",{get:function(){return this._leftDistance},set:function(t){this._leftDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rightDistance",{get:function(){return this._rightDistance},set:function(t){this._rightDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"verticalStepCount",{get:function(){return this._verticalStepCount},set:function(t){this._verticalStepCount=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"horizontalStepCount",{get:function(){return this._horizontalStepCount},set:function(t){this._horizontalStepCount=t},enumerable:!0,configurable:!0}),t.prototype.shrink=function(t,e,i,n,o,r){this.isFirstStage&&this.initializeFirstStage(t),this.isNewStage&&this.beginNewStage(t,e,i,o,r),this.continueCurrentStage(t,n,i)},t.prototype.initializeFirstStage=function(t){this.currentZoneShape.upperLeftPoint.x=0,this.currentZoneShape.upperLeftPoint.y=0,this.currentZoneShape.lowerRightPoint.x=t.length-1,this.currentZoneShape.lowerRightPoint.y=t[0].length-1;var e=this.currentZoneShape.getHorizontalSide(),i=this.currentZoneShape.getVerticalSide();this.currentZoneShape.side=Math.min(e,i),this.isFirstStage=!1,this.isNewStage=!0},t.prototype.beginNewStage=function(t,e,i,n,o){this.clearBorder(t,o),this.calculateFinalZoneShape(e,i),this.calculateDistances(),this.calculateVerticalDistancesRatio(),this.calculateHorizontalDistancesRatio(),this.drawZoneBorderline(t,n),this.verticalStepCount=0,this.horizontalStepCount=0,this.isNewStage=!1},t.prototype.calculateFinalZoneShape=function(t,e){var i=this.currentZoneShape.side/t,n=Math.round(i);i=n<=e?e:n;var o=this.currentZoneShape.upperLeftPoint.x,r=this.currentZoneShape.lowerRightPoint.x-i+2,a=this.currentZoneShape.upperLeftPoint.y,h=this.currentZoneShape.lowerRightPoint.y-i+2,s=Math.floor(Math.random()*(r-o)+o),p=Math.floor(Math.random()*(h-a)+a);this.finalZoneShape.upperLeftPoint.x=s,this.finalZoneShape.upperLeftPoint.y=p,this.finalZoneShape.side=i,this.finalZoneShape.calculateLowerRightPoint()},t.prototype.calculateDistances=function(){this.topDistance=Math.abs(this.finalZoneShape.upperLeftPoint.y-this.currentZoneShape.upperLeftPoint.y),this.bottomDistance=Math.abs(this.currentZoneShape.lowerRightPoint.y-this.finalZoneShape.lowerRightPoint.y),this.leftDistance=Math.abs(this.finalZoneShape.upperLeftPoint.x-this.currentZoneShape.upperLeftPoint.x),this.rightDistance=Math.abs(this.currentZoneShape.lowerRightPoint.x-this.finalZoneShape.lowerRightPoint.x)},t.prototype.calculateVerticalDistancesRatio=function(){if(this.topDistance<=0||this.bottomDistance<=0)this.verticalDistancesRatio=0;else{var t=Math.max(this.topDistance,this.bottomDistance),e=Math.min(this.topDistance,this.bottomDistance);this.verticalDistancesRatio=Math.floor(t/e)}},t.prototype.calculateHorizontalDistancesRatio=function(){if(this.leftDistance<=0||this.rightDistance<=0)this.horizontalDistancesRatio=0;else{var t=Math.max(this.leftDistance,this.rightDistance),e=Math.min(this.leftDistance,this.rightDistance);this.horizontalDistancesRatio=Math.floor(t/e)}},t.prototype.continueCurrentStage=function(t,e,i){var n={topStep:0,bottomStep:0,leftStep:0,rightStep:0};this.shrinkVertically(t,e,n),this.shrinkHorizontally(t,e,n),this.shrinkSingleSizeZone(t,e,i),this.calculateCurrentZoneShape(n),this.checkIsFinalZoneReached()},t.prototype.shrinkVertically=function(t,e,i){var n=this.currentZoneShape.upperLeftPoint.y===this.finalZoneShape.upperLeftPoint.y,o=this.currentZoneShape.lowerRightPoint.y===this.finalZoneShape.lowerRightPoint.y,r=this.verticalStepCount===this.verticalDistancesRatio,a=this.currentZoneShape.upperLeftPoint.x,h=this.currentZoneShape.upperLeftPoint.y,s=this.currentZoneShape.lowerRightPoint.x,p=this.currentZoneShape.lowerRightPoint.y;if(n||o){if(n&&!o){for(c=a;c<=s;c++)t[c][p]=e;i.bottomStep++}else if(!n&&o){for(c=a;c<=s;c++)t[c][h]=e;i.topStep++}}else if(this.verticalStepCount++,this.topDistance>this.bottomDistance){i.topStep++;for(var c=a;c<=s;c++)t[c][h]=e,r&&(t[c][p]=e);r&&(i.bottomStep++,this.verticalStepCount=0)}else if(this.topDistance<this.bottomDistance){i.bottomStep++;for(var c=a;c<=s;c++)t[c][p]=e,r&&(t[c][h]=e);r&&(i.topStep++,this.verticalStepCount=0)}else{for(var c=a;c<=s;c++)t[c][h]=e,t[c][p]=e;i.topStep++,i.bottomStep++,this.verticalStepCount=0}},t.prototype.shrinkHorizontally=function(t,e,i){var n=this.currentZoneShape.upperLeftPoint.x===this.finalZoneShape.upperLeftPoint.x,o=this.currentZoneShape.lowerRightPoint.x===this.finalZoneShape.lowerRightPoint.x,r=this.horizontalStepCount===this.horizontalDistancesRatio,a=this.currentZoneShape.upperLeftPoint.x,h=this.currentZoneShape.upperLeftPoint.y,s=this.currentZoneShape.lowerRightPoint.x,p=this.currentZoneShape.lowerRightPoint.y;if(n||o){if(n&&!o){for(c=h;c<=p;c++)t[s][c]=e;i.rightStep++}else if(!n&&o){for(c=h;c<=p;c++)t[a][c]=e;i.leftStep++}}else if(this.horizontalStepCount++,this.leftDistance>this.rightDistance){i.leftStep++;for(var c=h;c<=p;c++)t[a][c]=e,r&&(t[s][c]=e);r&&(i.rightStep++,this.horizontalStepCount=0)}else if(this.leftDistance<this.rightDistance){i.rightStep++;for(var c=h;c<=p;c++)t[s][c]=e,r&&(t[a][c]=e);r&&(i.leftStep++,this.horizontalStepCount=0)}else{for(var c=h;c<=p;c++)t[a][c]=e,t[s][c]=e;i.leftStep++,i.rightStep++,this.horizontalStepCount=0}},t.prototype.shrinkSingleSizeZone=function(t,e,i){1===this.currentZoneShape.side&&i<1&&(t[this.currentZoneShape.upperLeftPoint.x][this.currentZoneShape.upperLeftPoint.y]=e)},t.prototype.calculateCurrentZoneShape=function(t){this.currentZoneShape.upperLeftPoint.x+=t.leftStep,this.currentZoneShape.upperLeftPoint.y+=t.topStep,this.currentZoneShape.lowerRightPoint.x-=t.rightStep,this.currentZoneShape.lowerRightPoint.y-=t.bottomStep,this.currentZoneShape.calculateSide()},t.prototype.checkIsFinalZoneReached=function(){this.currentZoneShape.upperLeftPoint.x===this.finalZoneShape.upperLeftPoint.x&&this.currentZoneShape.upperLeftPoint.y===this.finalZoneShape.upperLeftPoint.y&&this.currentZoneShape.side===this.finalZoneShape.side&&this.currentZoneShape.lowerRightPoint.x===this.finalZoneShape.lowerRightPoint.x&&this.currentZoneShape.lowerRightPoint.y===this.finalZoneShape.lowerRightPoint.y&&(this.isNewStage=!0)},t.prototype.drawZoneBorderline=function(t,e){for(var i=this.finalZoneShape.upperLeftPoint.x;i<=this.finalZoneShape.lowerRightPoint.x;i++)t[i][this.finalZoneShape.upperLeftPoint.y]=e,t[i][this.finalZoneShape.lowerRightPoint.y]=e;for(i=this.finalZoneShape.upperLeftPoint.y;i<=this.finalZoneShape.lowerRightPoint.y;i++)t[this.finalZoneShape.upperLeftPoint.x][i]=e,t[this.finalZoneShape.lowerRightPoint.x][i]=e},t.prototype.clearBorder=function(t,e){for(var i=this.finalZoneShape.upperLeftPoint.x;i<=this.finalZoneShape.lowerRightPoint.x;i++)t[i][this.finalZoneShape.upperLeftPoint.y]=e,t[i][this.finalZoneShape.lowerRightPoint.y]=e;for(i=this.finalZoneShape.upperLeftPoint.y;i<=this.finalZoneShape.lowerRightPoint.y;i++)t[this.finalZoneShape.upperLeftPoint.x][i]=e,t[this.finalZoneShape.lowerRightPoint.x][i]=e},t}();e.Zone=r},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});for(var n=i(2),o=new Array(18),r=0;r<18;r++)o[r]=new Array(18);for(r=0;r<18;r++)for(var a=0;a<18;a++)o[r][a]=" ";var h=new n.Zone,s=function(t){!function(e){setTimeout(function(){console.clear(),h.shrink(e,1.4,0,"∎",0," "),console.table(e)},1e3*t)}(o)};for(r=0;r<19;r++)s(r)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3pvbmUvem9uZVNoYXBlLnRzIiwid2VicGFjazovLy8uL3NyYy96b25lL3BvaW50LnRzIiwid2VicGFjazovLy8uL3NyYy96b25lL3pvbmUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsInZhbHVlIiwibiIsIl9fZXNNb2R1bGUiLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJab25lU2hhcGUiLCJ1cHBlckxlZnRQb2ludCIsInNpZGUiLCJsb3dlclJpZ2h0UG9pbnQiLCJ0aGlzIiwiX3VwcGVyTGVmdFBvaW50IiwiX3NpZGUiLCJfbG93ZXJSaWdodFBvaW50IiwiY2FsY3VsYXRlTG93ZXJSaWdodFBvaW50IiwieCIsInkiLCJjYWxjdWxhdGVTaWRlIiwiZ2V0VmVydGljYWxTaWRlIiwiZ2V0SG9yaXpvbnRhbFNpZGUiLCJQb2ludCIsIl94IiwiX3kiLCJwb2ludF8xIiwiem9uZVNoYXBlXzEiLCJab25lIiwiX2lzRmlyc3RTdGFnZSIsIl9pc05ld1N0YWdlIiwiX2ZpbmFsWm9uZVNoYXBlIiwiX2N1cnJlbnRab25lU2hhcGUiLCJfdmVydGljYWxEaXN0YW5jZXNSYXRpbyIsIl9ob3Jpem9udGFsRGlzdGFuY2VzUmF0aW8iLCJfdG9wRGlzdGFuY2UiLCJfYm90dG9tRGlzdGFuY2UiLCJfbGVmdERpc3RhbmNlIiwiX3JpZ2h0RGlzdGFuY2UiLCJfdmVydGljYWxTdGVwQ291bnQiLCJfaG9yaXpvbnRhbFN0ZXBDb3VudCIsInNocmluayIsImxvY2F0aW9uIiwic2hyaW5rQ29lZmZpY2llbnQiLCJsYXN0Wm9uZVNpZGUiLCJmaWxsaW5nT2JqZWN0IiwiYm9yZGVyRmlsbGluZ09iamVjdCIsImNsZWFuZXJPYmplY3QiLCJpc0ZpcnN0U3RhZ2UiLCJpbml0aWFsaXplRmlyc3RTdGFnZSIsImlzTmV3U3RhZ2UiLCJiZWdpbk5ld1N0YWdlIiwiY29udGludWVDdXJyZW50U3RhZ2UiLCJjdXJyZW50Wm9uZVNoYXBlIiwibGVuZ3RoIiwiaG9yaXpvbnRhbFNpZGUiLCJ2ZXJ0aWNhbFNpZGUiLCJNYXRoIiwibWluIiwiY2xlYXJCb3JkZXIiLCJjYWxjdWxhdGVGaW5hbFpvbmVTaGFwZSIsImNhbGN1bGF0ZURpc3RhbmNlcyIsImNhbGN1bGF0ZVZlcnRpY2FsRGlzdGFuY2VzUmF0aW8iLCJjYWxjdWxhdGVIb3Jpem9udGFsRGlzdGFuY2VzUmF0aW8iLCJkcmF3Wm9uZUJvcmRlcmxpbmUiLCJ2ZXJ0aWNhbFN0ZXBDb3VudCIsImhvcml6b250YWxTdGVwQ291bnQiLCJmaW5hbFpvbmVTaWRlIiwiZmluYWxab25lU2lkZVJvdW5kZWQiLCJyb3VuZCIsIm1pbkJvdW5kWCIsIm1heEJvdW5kWCIsIm1pbkJvdW5kWSIsIm1heEJvdW5kWSIsImZpbmFsWm9uZVgxIiwiZmxvb3IiLCJyYW5kb20iLCJmaW5hbFpvbmVZMSIsImZpbmFsWm9uZVNoYXBlIiwidG9wRGlzdGFuY2UiLCJhYnMiLCJib3R0b21EaXN0YW5jZSIsImxlZnREaXN0YW5jZSIsInJpZ2h0RGlzdGFuY2UiLCJ2ZXJ0aWNhbERpc3RhbmNlc1JhdGlvIiwibWF4IiwiaG9yaXpvbnRhbERpc3RhbmNlc1JhdGlvIiwic2hyaW5rU3RlcHMiLCJ0b3BTdGVwIiwiYm90dG9tU3RlcCIsImxlZnRTdGVwIiwicmlnaHRTdGVwIiwic2hyaW5rVmVydGljYWxseSIsInNocmlua0hvcml6b250YWxseSIsInNocmlua1NpbmdsZVNpemVab25lIiwiY2FsY3VsYXRlQ3VycmVudFpvbmVTaGFwZSIsImNoZWNrSXNGaW5hbFpvbmVSZWFjaGVkIiwiaXNUb3BTaWRlUmVhY2hlZCIsImlzQm90dG9tU2lkZVJlYWNoZWQiLCJpc0NvbW1vblN0ZXAiLCJ1cHBlclgiLCJ1cHBlclkiLCJsb3dlclgiLCJsb3dlclkiLCJpc0xlZnRTaWRlUmVhY2hlZCIsImlzUmlnaHRTaWRlUmVhY2hlZCIsInpvbmVfMSIsImdhbWVMb2NhdGlvbiIsIkFycmF5IiwiaiIsInpvbmUiLCJzZXRUaW1lb3V0IiwiY29uc29sZSIsImNsZWFyIiwidGFibGUiXSwibWFwcGluZ3MiOiJhQUNBLElBQUFBLEtBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsSUFDQUcsRUFBQUgsRUFDQUksR0FBQSxFQUNBSCxZQVVBLE9BTkFJLEVBQUFMLEdBQUFNLEtBQUFKLEVBQUFELFFBQUFDLElBQUFELFFBQUFGLEdBR0FHLEVBQUFFLEdBQUEsRUFHQUYsRUFBQUQsUUFLQUYsRUFBQVEsRUFBQUYsRUFHQU4sRUFBQVMsRUFBQVYsRUFHQUMsRUFBQVUsRUFBQSxTQUFBUixFQUFBUyxFQUFBQyxHQUNBWixFQUFBYSxFQUFBWCxFQUFBUyxJQUNBRyxPQUFBQyxlQUFBYixFQUFBUyxHQUNBSyxjQUFBLEVBQ0FDLFlBQUEsRUFDQUMsSUFBQU4sS0FNQVosRUFBQW1CLEVBQUEsU0FBQWpCLEdBQ0FZLE9BQUFDLGVBQUFiLEVBQUEsY0FBaURrQixPQUFBLEtBSWpEcEIsRUFBQXFCLEVBQUEsU0FBQWxCLEdBQ0EsSUFBQVMsRUFBQVQsS0FBQW1CLFdBQ0EsV0FBMkIsT0FBQW5CLEVBQUEsU0FDM0IsV0FBaUMsT0FBQUEsR0FFakMsT0FEQUgsRUFBQVUsRUFBQUUsRUFBQSxJQUFBQSxHQUNBQSxHQUlBWixFQUFBYSxFQUFBLFNBQUFVLEVBQUFDLEdBQXNELE9BQUFWLE9BQUFXLFVBQUFD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R25DLEdBQUs2QixLQUFLaUUsZUFBZWxFLGdCQUFnQk8sRUFBR25DLElBQzdGMEQsRUFBUzdCLEtBQUtpRSxlQUFlcEUsZUFBZVEsR0FBR2xDLEdBQUsrRCxFQUNwREwsRUFBUzdCLEtBQUtpRSxlQUFlbEUsZ0JBQWdCTSxHQUFHbEMsR0FBSytELEdBb0YzRG5CLEVBMXBCQSxHQUFhOUMsRUFBQThDLHNGQ0ZiLElBVkEsSUFBQThFLEVBQUE5SCxFQUFBLEdBU0krSCxFQUFlLElBQUlDLE1BUEYsSUFRWjVILEVBQUksRUFBR0EsRUFSSyxHQVFhQSxJQUNoQzJILEVBQWEzSCxHQUFLLElBQUk0SCxNQVRILElBWXJCLElBQVM1SCxFQUFJLEVBQUdBLEVBWkssR0FZYUEsSUFDaEMsSUFBSyxJQUFJNkgsRUFBSSxFQUFHQSxFQWJHLEdBYWVBLElBQ2hDRixFQUFhM0gsR0FBRzZILEdBQUssSUFJekIsSUFBTUMsRUFBTyxJQUFJSixFQUFBOUUsZ0JBRVI1QyxJQUNQLFNBQVcySCxHQUNUSSxXQUFXLFdBQ1RDLFFBQVFDLFFBQ1JILEVBQUtyRSxPQUFPa0UsRUF2QlEsSUFDTCxFQUNDLElBQ00sRUFDTixLQW9CaEJLLFFBQVFFLE1BQU1QLElBQ1QsSUFBSjNILEdBTEwsQ0FNRzJILElBUEwsSUFBUzNILEVBQUksRUFBR0EsRUFBSSxHQUFJQSxNQUFmQSIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbiBcdFx0XHR9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDMpO1xuIiwiaW1wb3J0IHsgUG9pbnQgfSBmcm9tIFwiLi9wb2ludFwiO1xyXG5cclxuLyoqXHJcbiAqIEBjbGFzc1xyXG4gKiBAZGVzY3JpcHRpb24gUmVwcmVzZW50cyByZWN0YW5nbGUgc2hhcGUgb2Ygem9uZVxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIFpvbmVTaGFwZSB7XHJcbiAgcHJpdmF0ZSBfdXBwZXJMZWZ0UG9pbnQ6IFBvaW50O1xyXG4gIHByaXZhdGUgX3NpZGU6IG51bWJlcjtcclxuICBwcml2YXRlIF9sb3dlclJpZ2h0UG9pbnQ6IFBvaW50O1xyXG5cclxuICAvLyNyZWdpb24gQ29uc3RydWN0b3JcclxuXHJcblx0LyoqIEBjb25zdHJ1Y3RvclxyXG5cdCAqIEBwYXJhbSB7UG9pbnR9IHVwcGVyTGVmdFBvaW50IFVwcGVyIGxlZnQgcG9pbnQgb2Ygem9uZSBzaGFwZVxyXG5cdCAqIEBwYXJhbSB7bnVtYmVyfSBzaWRlIFNpZGUgdmFsdWVcclxuXHQgKiBAcGFyYW0ge1BvaW50fSBsb3dlclJpZ2h0UG9pbnQgTG93ZXIgcmlnaHQgcG9pbnQgb2Ygem9uZSBzaGFwZVxyXG5cdCAqIEB0aGlzIHtab25lU2hhcGV9XHJcblx0ICogQGRlc2NyaXB0aW9uIENvbnN0cnVjdG9yIG9mIHRoZSBab25lU2hhcGUgY2xhc3MgKi9cclxuICBwdWJsaWMgY29uc3RydWN0b3IodXBwZXJMZWZ0UG9pbnQ6IFBvaW50LCBzaWRlOiBudW1iZXIsIGxvd2VyUmlnaHRQb2ludDogUG9pbnQpIHtcclxuICAgIHRoaXMuX3VwcGVyTGVmdFBvaW50ID0gdXBwZXJMZWZ0UG9pbnQ7XHJcbiAgICB0aGlzLl9zaWRlID0gc2lkZTtcclxuICAgIHRoaXMuX2xvd2VyUmlnaHRQb2ludCA9IGxvd2VyUmlnaHRQb2ludDtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG5cclxuICAvLyNyZWdpb24gQWNjZXNzb3IgZnVuY3Rpb25zIGRlY2xhcmF0aW9uXHJcblxyXG5cdC8qKlxyXG5cdCAqIEFjY2Vzc29yXHJcblx0ICogQGRlc2NyaXB0aW9uIFVwcGVyIGxlZnQgcG9pbnQgb2Ygem9uZSBzaGFwZVxyXG5cdCAqL1xyXG4gIHB1YmxpYyBnZXQgdXBwZXJMZWZ0UG9pbnQoKTogUG9pbnQge1xyXG4gICAgcmV0dXJuIHRoaXMuX3VwcGVyTGVmdFBvaW50O1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IHVwcGVyTGVmdFBvaW50KHZhbHVlOiBQb2ludCkge1xyXG4gICAgdGhpcy5fdXBwZXJMZWZ0UG9pbnQgPSB2YWx1ZTtcclxuICB9XHJcblxyXG5cdC8qKlxyXG5cdCAqIEFjY2Vzc29yXHJcblx0ICogQGRlc2NyaXB0aW9uIFNpZGUgdmFsdWVcclxuXHQgKi9cclxuICBwdWJsaWMgZ2V0IHNpZGUoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLl9zaWRlO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IHNpZGUodmFsdWU6IG51bWJlcikge1xyXG4gICAgdGhpcy5fc2lkZSA9IHZhbHVlO1xyXG4gIH1cclxuXHJcblx0LyoqXHJcblx0ICogQWNjZXNzb3JcclxuXHQgKiBAZGVzY3JpcHRpb24gTG93ZXIgcmlnaHQgcG9pbnQgb2Ygem9uZSBzaGFwZVxyXG5cdCAqL1xyXG4gIHB1YmxpYyBnZXQgbG93ZXJSaWdodFBvaW50KCk6IFBvaW50IHtcclxuICAgIHJldHVybiB0aGlzLl9sb3dlclJpZ2h0UG9pbnQ7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgbG93ZXJSaWdodFBvaW50KHZhbHVlOiBQb2ludCkge1xyXG4gICAgdGhpcy5fbG93ZXJSaWdodFBvaW50ID0gdmFsdWU7XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgLy8jcmVnaW9uIENsYXNzIGZ1bmN0aW9uc1xyXG5cclxuXHQvKipcclxuXHQgKiBAZnVuY3Rpb25cclxuXHQgKiBAZGVzY3JpcHRpb24gQ2FsY3VsYXRlcyBsb3dlciByaWdodCBwb2ludCBjb29yZGluYXRlc1xyXG5cdCAqL1xyXG4gIHB1YmxpYyBjYWxjdWxhdGVMb3dlclJpZ2h0UG9pbnQoKTogdm9pZCB7XHJcbiAgICB0aGlzLmxvd2VyUmlnaHRQb2ludC54ID0gdGhpcy51cHBlckxlZnRQb2ludC54ICsgdGhpcy5zaWRlIC0gMTtcclxuICAgIHRoaXMubG93ZXJSaWdodFBvaW50LnkgPSB0aGlzLnVwcGVyTGVmdFBvaW50LnkgKyB0aGlzLnNpZGUgLSAxO1xyXG4gIH1cclxuXHJcblx0LyoqXHJcblx0ICogQGZ1bmN0aW9uXHJcblx0ICogQGRlc2NyaXB0aW9uIENhbGN1bGF0ZXMgc2lkZSB1c2luZyB1cHBlciBsZWZ0IGFuZCBsb3dlciByaWdodCBwb2ludHNcclxuXHQgKi9cclxuICBwdWJsaWMgY2FsY3VsYXRlU2lkZSgpOiB2b2lkIHtcclxuICAgIHRoaXMuc2lkZSA9IHRoaXMubG93ZXJSaWdodFBvaW50LnggLSB0aGlzLnVwcGVyTGVmdFBvaW50LnggKyAxO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldFZlcnRpY2FsU2lkZSgpOiBudW1iZXIge1xyXG4gICAgY29uc3QgdmVydGljYWxTaWRlID0gdGhpcy5sb3dlclJpZ2h0UG9pbnQueSAtIHRoaXMudXBwZXJMZWZ0UG9pbnQueSArIDE7XHJcbiAgICByZXR1cm4gdmVydGljYWxTaWRlO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldEhvcml6b250YWxTaWRlKCk6IG51bWJlciB7XHJcbiAgICBjb25zdCBob3Jpem9udGFsU2lkZSA9IHRoaXMubG93ZXJSaWdodFBvaW50LnggLSB0aGlzLnVwcGVyTGVmdFBvaW50LnggKyAxO1xyXG4gICAgcmV0dXJuIGhvcml6b250YWxTaWRlO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcbn07IiwiLyoqXHJcbiAqIEBjbGFzc1xyXG4gKiBAZGVzY3JpcHRpb24gUmVwcmVzZW50cyBjb29yZGluYXRlIHBvaW50XHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgUG9pbnQge1xyXG4gIHByaXZhdGUgX3g6IG51bWJlcjtcclxuICBwcml2YXRlIF95OiBudW1iZXI7XHJcblxyXG4gIC8vI3JlZ2lvbiBDb25zdHJ1Y3RvclxyXG5cclxuXHQvKiogQGNvbnN0cnVjdG9yXHJcblx0ICogQHBhcmFtIHtudW1iZXJ9IHggWCBjb29yZGluYXRlIG9mIGEgcG9pbnRcclxuXHQgKiBAcGFyYW0ge251bWJlcn0geSBZIGNvb3JkaW5hdGUgb2YgYSBwb2ludFxyXG5cdCAqIEB0aGlzIHtQb2ludH1cclxuXHQgKiBAZGVzY3JpcHRpb24gQ29uc3RydWN0b3Igb2YgdGhlIFBvaW50IGNsYXNzICovXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKHg6IG51bWJlciwgeTogbnVtYmVyKSB7XHJcbiAgICB0aGlzLl94ID0geDtcclxuICAgIHRoaXMuX3kgPSB5O1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI3JlZ2lvbiBBY2Nlc3NvciBmdW5jdGlvbnMgZGVjbGFyYXRpb25cclxuXHJcblx0LyoqXHJcblx0ICogQWNjZXNzb3JcclxuXHQgKiBAZGVzY3JpcHRpb24gWCBjb29yZGluYXRlIG9mIGEgcG9pbnRcclxuXHQgKi9cclxuICBwdWJsaWMgZ2V0IHgoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLl94O1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IHgodmFsdWU6IG51bWJlcikge1xyXG4gICAgdGhpcy5feCA9IHZhbHVlO1xyXG4gIH1cclxuXHJcblx0LyoqXHJcblx0ICogQWNjZXNzb3JcclxuXHQgKiBAZGVzY3JpcHRpb24gWSBjb29yZGluYXRlIG9mIGEgcG9pbnRcclxuXHQgKi9cclxuICBwdWJsaWMgZ2V0IHkoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLl95O1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IHkodmFsdWU6IG51bWJlcikge1xyXG4gICAgdGhpcy5feSA9IHZhbHVlO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcbn0iLCJpbXBvcnQgeyBQb2ludCB9IGZyb20gXCIuL3BvaW50XCI7XHJcbmltcG9ydCB7IFpvbmVTaGFwZSB9IGZyb20gXCIuL3pvbmVTaGFwZVwiO1xyXG5cclxuLypcclxu0J3QsNC00L4g0L7QsdC80L7Qt9Cz0L7QstCw0YLRjDpcclxuXHQt0JLRgdC1INC10YnQtSDQv9C10YDQtdGB0LzQvtGC0YDQtdGC0Ywg0YHQv9C+0YHQvtCxINGB0LbQsNGC0LjRjyDQtdC00LjQvdC40YfQvdC+0Lkg0LfQvtC90YssINC80LEg0YfRgtC+LdGC0L4g0LzQvtC20L3QviDRgdC00LXQu9Cw0YLRjCDQu9GD0YfRiNC1XHJcbiovXHJcblxyXG4vKipcclxuICogQGNsYXNzXHJcbiAqIEBkZXNjcmlwdGlvbiBSZXByZXNlbnRzIHNocmlua2luZyB6b25lIGluIHRoZSBnYW1lIGxvY2F0aW9uXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgWm9uZSB7XHJcbiAgcHJpdmF0ZSBfaXNGaXJzdFN0YWdlOiBib29sZWFuO1xyXG4gIHByaXZhdGUgX2lzTmV3U3RhZ2U6IGJvb2xlYW47XHJcbiAgcHJpdmF0ZSBfZmluYWxab25lU2hhcGU6IFpvbmVTaGFwZTtcclxuICBwcml2YXRlIF9jdXJyZW50Wm9uZVNoYXBlOiBab25lU2hhcGU7XHJcbiAgcHJpdmF0ZSBfdmVydGljYWxEaXN0YW5jZXNSYXRpbzogbnVtYmVyO1xyXG4gIHByaXZhdGUgX2hvcml6b250YWxEaXN0YW5jZXNSYXRpbzogbnVtYmVyO1xyXG4gIHByaXZhdGUgX3RvcERpc3RhbmNlOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBfYm90dG9tRGlzdGFuY2U6IG51bWJlcjtcclxuICBwcml2YXRlIF9sZWZ0RGlzdGFuY2U6IG51bWJlcjtcclxuICBwcml2YXRlIF9yaWdodERpc3RhbmNlOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBfdmVydGljYWxTdGVwQ291bnQ6IG51bWJlcjtcclxuICBwcml2YXRlIF9ob3Jpem9udGFsU3RlcENvdW50OiBudW1iZXI7XHJcblxyXG4gIC8vI3JlZ2lvbiBDb25zdHJ1Y3RvclxyXG5cclxuXHQvKiogQGNvbnN0cnVjdG9yXHJcblx0ICogQHRoaXMge1pvbmV9XHJcblx0ICogQGRlc2NyaXB0aW9uIENvbnN0cnVjdG9yIG9mIHRoZSBab25lIGNsYXNzICovXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5faXNGaXJzdFN0YWdlID0gdHJ1ZTtcclxuICAgIHRoaXMuX2lzTmV3U3RhZ2UgPSB0cnVlO1xyXG4gICAgdGhpcy5fZmluYWxab25lU2hhcGUgPSBuZXcgWm9uZVNoYXBlKG5ldyBQb2ludCgwLCAwKSwgMCwgbmV3IFBvaW50KDAsIDApKTtcclxuICAgIHRoaXMuX2N1cnJlbnRab25lU2hhcGUgPSBuZXcgWm9uZVNoYXBlKG5ldyBQb2ludCgwLCAwKSwgMCwgbmV3IFBvaW50KDAsIDApKTtcclxuICAgIHRoaXMuX3ZlcnRpY2FsRGlzdGFuY2VzUmF0aW8gPSAwO1xyXG4gICAgdGhpcy5faG9yaXpvbnRhbERpc3RhbmNlc1JhdGlvID0gMDtcclxuICAgIHRoaXMuX3RvcERpc3RhbmNlID0gMDtcclxuICAgIHRoaXMuX2JvdHRvbURpc3RhbmNlID0gMDtcclxuICAgIHRoaXMuX2xlZnREaXN0YW5jZSA9IDA7XHJcbiAgICB0aGlzLl9yaWdodERpc3RhbmNlID0gMDtcclxuICAgIHRoaXMuX3ZlcnRpY2FsU3RlcENvdW50ID0gMDtcclxuICAgIHRoaXMuX2hvcml6b250YWxTdGVwQ291bnQgPSAwO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI3JlZ2lvbiBBY2Nlc3NvciBmdW5jdGlvbnMgZGVjbGFyYXRpb25cclxuXHJcblx0LyoqXHJcblx0ICogQWNjZXNzb3JcclxuXHQgKiBAZGVzY3JpcHRpb24gSXMgdGhhdCBhIGZpcnN0IHN0YWdlIG9mIHNocmlua2luZz9cclxuXHQgKi9cclxuICBwdWJsaWMgZ2V0IGlzRmlyc3RTdGFnZSgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLl9pc0ZpcnN0U3RhZ2U7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgaXNGaXJzdFN0YWdlKHZhbHVlOiBib29sZWFuKSB7XHJcbiAgICB0aGlzLl9pc0ZpcnN0U3RhZ2UgPSB2YWx1ZTtcclxuICB9XHJcblxyXG5cdC8qKlxyXG5cdCAqIEFjY2Vzc29yXHJcblx0ICogQGRlc2NyaXB0aW9uIElzIHRoYXQgYSBuZXcgc3RhZ2Ugb2Ygc2hyaW5raW5nXHJcblx0ICovXHJcbiAgcHVibGljIGdldCBpc05ld1N0YWdlKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuX2lzTmV3U3RhZ2U7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgaXNOZXdTdGFnZSh2YWx1ZTogYm9vbGVhbikge1xyXG4gICAgdGhpcy5faXNOZXdTdGFnZSA9IHZhbHVlO1xyXG4gIH1cclxuXHJcblx0LyoqXHJcblx0ICogQWNjZXNzb3JcclxuXHQgKiBAZGVzY3JpcHRpb24gUGFyYW1ldGVycyBvZiB0aGUgZmluYWwgem9uZSBzaGFwZTpcclxuXHQgKiB1cHBlciBsZWZ0IHBvaW50LCBsb3dlciByaWdodCBwb2ludCwgc2lkZVxyXG5cdCAqL1xyXG4gIHB1YmxpYyBnZXQgZmluYWxab25lU2hhcGUoKTogWm9uZVNoYXBlIHtcclxuICAgIHJldHVybiB0aGlzLl9maW5hbFpvbmVTaGFwZTtcclxuICB9XHJcbiAgcHVibGljIHNldCBmaW5hbFpvbmVTaGFwZSh2YWx1ZTogWm9uZVNoYXBlKSB7XHJcbiAgICB0aGlzLl9maW5hbFpvbmVTaGFwZSA9IHZhbHVlO1xyXG4gIH1cclxuXHJcblx0LyoqXHJcblx0ICogQWNjZXNzb3JcclxuXHQgKiBAZGVzY3JpcHRpb24gUGFyYW1ldGVycyBvZiB0aGUgY3VycmVudCB6b25lIHNoYXBlOlxyXG5cdCAqIHVwcGVyIGxlZnQgcG9pbnQsIGxvd2VyIHJpZ2h0IHBvaW50LCBzaWRlXHJcblx0ICovXHJcbiAgcHVibGljIGdldCBjdXJyZW50Wm9uZVNoYXBlKCk6IFpvbmVTaGFwZSB7XHJcbiAgICByZXR1cm4gdGhpcy5fY3VycmVudFpvbmVTaGFwZTtcclxuICB9XHJcbiAgcHVibGljIHNldCBjdXJyZW50Wm9uZVNoYXBlKHZhbHVlOiBab25lU2hhcGUpIHtcclxuICAgIHRoaXMuX2N1cnJlbnRab25lU2hhcGUgPSB2YWx1ZTtcclxuICB9XHJcblxyXG5cdC8qKlxyXG5cdCAqIEFjY2Vzc29yXHJcblx0ICogQGRlc2NyaXB0aW9uIFRoZSByYXRpbyBvZiB0aGUgZGlzdGFuY2VzIGJldHdlZW4gdGhlIHpvbmVzIHZlcnRpY2FsbHlcclxuXHQgKi9cclxuICBwdWJsaWMgZ2V0IHZlcnRpY2FsRGlzdGFuY2VzUmF0aW8oKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLl92ZXJ0aWNhbERpc3RhbmNlc1JhdGlvO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IHZlcnRpY2FsRGlzdGFuY2VzUmF0aW8odmFsdWU6IG51bWJlcikge1xyXG4gICAgdGhpcy5fdmVydGljYWxEaXN0YW5jZXNSYXRpbyA9IHZhbHVlO1xyXG4gIH1cclxuXHJcblx0LyoqXHJcblx0ICogQWNjZXNzb3JcclxuXHQgKiBAZGVzY3JpcHRpb24gVGhlIHJhdGlvIG9mIHRoZSBkaXN0YW5jZXMgYmV0d2VlbiB0aGUgem9uZXMgaG9yaXpvbnRhbGx5XHJcblx0ICovXHJcbiAgcHVibGljIGdldCBob3Jpem9udGFsRGlzdGFuY2VzUmF0aW8oKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLl9ob3Jpem9udGFsRGlzdGFuY2VzUmF0aW87XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgaG9yaXpvbnRhbERpc3RhbmNlc1JhdGlvKHZhbHVlOiBudW1iZXIpIHtcclxuICAgIHRoaXMuX2hvcml6b250YWxEaXN0YW5jZXNSYXRpbyA9IHZhbHVlO1xyXG4gIH1cclxuXHJcblx0LyoqXHJcblx0ICogQWNjZXNzb3JcclxuXHQgKiBAZGVzY3JpcHRpb24gVmFsdWUgb2YgdGhlIHRvcCBkaXN0YW5jZSBiZXR3ZWVuIHpvbmVzXHJcblx0ICovXHJcbiAgcHVibGljIGdldCB0b3BEaXN0YW5jZSgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuX3RvcERpc3RhbmNlO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IHRvcERpc3RhbmNlKHZhbHVlOiBudW1iZXIpIHtcclxuICAgIHRoaXMuX3RvcERpc3RhbmNlID0gdmFsdWU7XHJcbiAgfVxyXG5cclxuXHQvKipcclxuXHQgKiBBY2Nlc3NvclxyXG5cdCAqIEBkZXNjcmlwdGlvbiBWYWx1ZSBvZiB0aGUgYm90dG9tIGRpc3RhbmNlIGJldHdlZW4gem9uZXNcclxuXHQgKi9cclxuICBwdWJsaWMgZ2V0IGJvdHRvbURpc3RhbmNlKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy5fYm90dG9tRGlzdGFuY2U7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgYm90dG9tRGlzdGFuY2UodmFsdWU6IG51bWJlcikge1xyXG4gICAgdGhpcy5fYm90dG9tRGlzdGFuY2UgPSB2YWx1ZTtcclxuICB9XHJcblxyXG5cdC8qKlxyXG5cdCAqIEFjY2Vzc29yXHJcblx0ICogQGRlc2NyaXB0aW9uIFZhbHVlIG9mIHRoZSBsZWZ0IGRpc3RhbmNlIGJldHdlZW4gem9uZXNcclxuXHQgKi9cclxuICBwdWJsaWMgZ2V0IGxlZnREaXN0YW5jZSgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuX2xlZnREaXN0YW5jZTtcclxuICB9XHJcbiAgcHVibGljIHNldCBsZWZ0RGlzdGFuY2UodmFsdWU6IG51bWJlcikge1xyXG4gICAgdGhpcy5fbGVmdERpc3RhbmNlID0gdmFsdWU7XHJcbiAgfVxyXG5cclxuXHQvKipcclxuXHQgKiBBY2Nlc3NvclxyXG5cdCAqIEBkZXNjcmlwdGlvbiBWYWx1ZSBvZiB0aGUgcmlnaHQgZGlzdGFuY2UgYmV0d2VlbiB6b25lc1xyXG5cdCAqL1xyXG4gIHB1YmxpYyBnZXQgcmlnaHREaXN0YW5jZSgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuX3JpZ2h0RGlzdGFuY2U7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgcmlnaHREaXN0YW5jZSh2YWx1ZTogbnVtYmVyKSB7XHJcbiAgICB0aGlzLl9yaWdodERpc3RhbmNlID0gdmFsdWU7XHJcbiAgfVxyXG5cclxuXHQvKipcclxuXHQgKiBBY2Nlc3NvclxyXG5cdCAqIEBkZXNjcmlwdGlvbiBWYWx1ZSBvZiB0aGUgdmVydGljYWwgc2hyaW5raW5nIHN0ZXBzXHJcblx0ICovXHJcbiAgcHVibGljIGdldCB2ZXJ0aWNhbFN0ZXBDb3VudCgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuX3ZlcnRpY2FsU3RlcENvdW50O1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IHZlcnRpY2FsU3RlcENvdW50KHZhbHVlOiBudW1iZXIpIHtcclxuICAgIHRoaXMuX3ZlcnRpY2FsU3RlcENvdW50ID0gdmFsdWU7XHJcbiAgfVxyXG5cclxuXHQvKipcclxuXHQgKiBBY2Nlc3NvclxyXG5cdCAqIEBkZXNjcmlwdGlvbiBWYWx1ZSBvZiB0aGUgaG9yaXpvbnRhbCBzaHJpbmtpbmcgc3RlcHNcclxuXHQgKi9cclxuICBwdWJsaWMgZ2V0IGhvcml6b250YWxTdGVwQ291bnQoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLl9ob3Jpem9udGFsU3RlcENvdW50O1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IGhvcml6b250YWxTdGVwQ291bnQodmFsdWU6IG51bWJlcikge1xyXG4gICAgdGhpcy5faG9yaXpvbnRhbFN0ZXBDb3VudCA9IHZhbHVlO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI3JlZ2lvbiBDbGFzcyBmdW5jdGlvbnNcclxuXHJcblx0LyoqXHJcblx0ICogQGZ1bmN0aW9uXHJcblx0ICogQHBhcmFtIHthcnJheX0gbG9jYXRpb24gR2FtZSBsb2NhdGlvbiBmb3IgcHJvY2Vzc2luZ1xyXG5cdCAqIEBwYXJhbSB7bnVtYmVyfSBzaHJpbmtDb2VmZmljaWVudCBDb2VmZmljaWVudCBvZiB6b25lIHNocmlua2luZ1xyXG5cdCAqIEBwYXJhbSB7bnVtYmVyfSBsYXN0Wm9uZVNpZGUgVmFsdWUgb2YgdGhlIGxhc3Qgem9uZSBzaWRlXHJcblx0ICogQHBhcmFtIHsqfSBmaWxsaW5nT2JqZWN0IE9iamVjdCB0byBmaWxsIGFuIGFyZWEgb3V0c2lkZSB0aGUgem9uZVxyXG5cdCAqIEBwYXJhbSB7Kn0gYm9yZGVyRmlsbGluZ09iamVjdCBPYmplY3QgdG8gZmlsbCBhIGJvcmRlciBvZiB0aGUgem9uZVxyXG5cdCAqIEBwYXJhbSB7Kn0gY2xlYW5lck9iamVjdCBPYmplY3QgdG8gY2xlYW4gdGhlIGJvcmRlciBvZiB0aGUgem9uZVxyXG5cdCAqIEBkZXNjcmlwdGlvbiBNYWluIGZ1bmN0aW9uIG9mIHRoZSB6b25lIGFsZ29yaXRobVxyXG5cdCAqL1xyXG4gIHB1YmxpYyBzaHJpbmsobG9jYXRpb246IEFycmF5PGFueT4sIHNocmlua0NvZWZmaWNpZW50OiBudW1iZXIsIGxhc3Rab25lU2lkZTogbnVtYmVyLCBmaWxsaW5nT2JqZWN0OiBhbnksIGJvcmRlckZpbGxpbmdPYmplY3Q6IGFueSwgY2xlYW5lck9iamVjdDogYW55KTogdm9pZCB7XHJcbiAgICAvLyBWZXJpZmljYXRpb24gb2YgdGhlIGZpcnN0IHN0YWdlXHJcbiAgICBpZiAodGhpcy5pc0ZpcnN0U3RhZ2UpIHtcclxuICAgICAgdGhpcy5pbml0aWFsaXplRmlyc3RTdGFnZShsb2NhdGlvbik7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gVmVyaWZpY2F0aW9uIG9mIHRoZSBiZWdpbm5pbmcgb2YgdGhlIG5ldyBzdGFnZVxyXG5cclxuICAgIGlmICh0aGlzLmlzTmV3U3RhZ2UpIHtcclxuICAgICAgdGhpcy5iZWdpbk5ld1N0YWdlKGxvY2F0aW9uLCBzaHJpbmtDb2VmZmljaWVudCwgbGFzdFpvbmVTaWRlLCBib3JkZXJGaWxsaW5nT2JqZWN0LCBjbGVhbmVyT2JqZWN0KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBDb250aW51YXRpb24gb2YgdGhlIGN1cnJlbnQgc3RhZ2VcclxuXHJcbiAgICB0aGlzLmNvbnRpbnVlQ3VycmVudFN0YWdlKGxvY2F0aW9uLCBmaWxsaW5nT2JqZWN0LCBsYXN0Wm9uZVNpZGUpO1xyXG4gIH1cclxuXHJcblx0LyoqXHJcblx0ICogQGZ1bmN0aW9uXHJcblx0ICogQHBhcmFtIHthcnJheX0gbG9jYXRpb24gR2FtZSBsb2NhdGlvbiBmb3IgcHJvY2Vzc2luZ1xyXG5cdCAqIEBkZXNjcmlwdGlvbiBTZXRzIGdhbWUgbG9jYXRpb24gc2hhcGUgYXMgY3VycmVudCB6b25lIHNoYXBlXHJcblx0ICovXHJcbiAgcHJpdmF0ZSBpbml0aWFsaXplRmlyc3RTdGFnZShsb2NhdGlvbjogQXJyYXk8YW55Pik6IHZvaWQge1xyXG4gICAgdGhpcy5jdXJyZW50Wm9uZVNoYXBlLnVwcGVyTGVmdFBvaW50LnggPSAwO1xyXG4gICAgdGhpcy5jdXJyZW50Wm9uZVNoYXBlLnVwcGVyTGVmdFBvaW50LnkgPSAwO1xyXG4gICAgdGhpcy5jdXJyZW50Wm9uZVNoYXBlLmxvd2VyUmlnaHRQb2ludC54ID0gbG9jYXRpb24ubGVuZ3RoIC0gMTtcclxuICAgIHRoaXMuY3VycmVudFpvbmVTaGFwZS5sb3dlclJpZ2h0UG9pbnQueSA9IGxvY2F0aW9uWzBdLmxlbmd0aCAtIDE7XHJcblxyXG4gICAgY29uc3QgaG9yaXpvbnRhbFNpZGUgPSB0aGlzLmN1cnJlbnRab25lU2hhcGUuZ2V0SG9yaXpvbnRhbFNpZGUoKTtcclxuICAgIGNvbnN0IHZlcnRpY2FsU2lkZSA9IHRoaXMuY3VycmVudFpvbmVTaGFwZS5nZXRWZXJ0aWNhbFNpZGUoKTtcclxuICAgIHRoaXMuY3VycmVudFpvbmVTaGFwZS5zaWRlID0gTWF0aC5taW4oaG9yaXpvbnRhbFNpZGUsIHZlcnRpY2FsU2lkZSk7XHJcblxyXG4gICAgdGhpcy5pc0ZpcnN0U3RhZ2UgPSBmYWxzZTtcclxuICAgIHRoaXMuaXNOZXdTdGFnZSA9IHRydWU7XHJcbiAgfVxyXG5cclxuXHQvKipcclxuXHQgKiBAZnVuY3Rpb25cclxuXHQgKiBAcGFyYW0ge2FycmF5fSBsb2NhdGlvbiBHYW1lIGxvY2F0aW9uIGZvciBwcm9jZXNzaW5nXHJcblx0ICogQHBhcmFtIHtudW1iZXJ9IHNocmlua0NvZWZmaWNpZW50IENvZWZmaWNpZW50IG9mIHpvbmUgc2hyaW5raW5nXHJcblx0ICogQHBhcmFtIHtudW1iZXJ9IGxhc3Rab25lU2lkZSBWYWx1ZSBvZiB0aGUgbGFzdCB6b25lIHNpZGVcclxuXHQgKiBAcGFyYW0geyp9IGJvcmRlckZpbGxpbmdPYmplY3QgT2JqZWN0IHRvIGZpbGwgYSBib3JkZXIgb2YgdGhlIHpvbmVcclxuXHQgKiBAcGFyYW0geyp9IGNsZWFuZXJPYmplY3QgT2JqZWN0IHRvIGNsZWFuIHRoZSBib3JkZXIgb2YgdGhlIHpvbmVcclxuXHQgKiBAZGVzY3JpcHRpb24gRmluZHMgbmV3IGZpbmFsIHpvbmUgc2hhcGVcclxuXHQgKi9cclxuICBwcml2YXRlIGJlZ2luTmV3U3RhZ2UobG9jYXRpb246IEFycmF5PGFueT4sIHNocmlua0NvZWZmaWNpZW50OiBudW1iZXIsIGxhc3Rab25lU2lkZTogbnVtYmVyLCBib3JkZXJGaWxsaW5nT2JqZWN0OiBhbnksIGNsZWFuZXJPYmplY3Q6IGFueSk6IHZvaWQge1xyXG4gICAgdGhpcy5jbGVhckJvcmRlcihsb2NhdGlvbiwgY2xlYW5lck9iamVjdCk7XHJcbiAgICB0aGlzLmNhbGN1bGF0ZUZpbmFsWm9uZVNoYXBlKHNocmlua0NvZWZmaWNpZW50LCBsYXN0Wm9uZVNpZGUpO1xyXG4gICAgdGhpcy5jYWxjdWxhdGVEaXN0YW5jZXMoKTtcclxuICAgIHRoaXMuY2FsY3VsYXRlVmVydGljYWxEaXN0YW5jZXNSYXRpbygpO1xyXG4gICAgdGhpcy5jYWxjdWxhdGVIb3Jpem9udGFsRGlzdGFuY2VzUmF0aW8oKTtcclxuICAgIHRoaXMuZHJhd1pvbmVCb3JkZXJsaW5lKGxvY2F0aW9uLCBib3JkZXJGaWxsaW5nT2JqZWN0KTtcclxuXHJcbiAgICB0aGlzLnZlcnRpY2FsU3RlcENvdW50ID0gMDtcclxuICAgIHRoaXMuaG9yaXpvbnRhbFN0ZXBDb3VudCA9IDA7XHJcblxyXG4gICAgdGhpcy5pc05ld1N0YWdlID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuXHQvKipcclxuXHQgKiBAZnVuY3Rpb25cclxuXHQgKiBAcGFyYW0ge251bWJlcn0gc2hyaW5rQ29lZmZpY2llbnQgQ29lZmZpY2llbnQgb2Ygem9uZSBzaHJpbmtpbmdcclxuXHQgKiBAcGFyYW0ge251bWJlcn0gbGFzdFpvbmVTaWRlIFZhbHVlIG9mIHRoZSBsYXN0IHpvbmUgc2lkZVxyXG5cdCAqIEBkZXNjcmlwdGlvbiBDYWxjdWxhdGUgcGFyYW1ldGVycyBvZiB0aGUgZmluYWwgem9uZVxyXG5cdCAqL1xyXG4gIHByaXZhdGUgY2FsY3VsYXRlRmluYWxab25lU2hhcGUoc2hyaW5rQ29lZmZpY2llbnQ6IG51bWJlciwgbGFzdFpvbmVTaWRlOiBudW1iZXIpOiB2b2lkIHtcclxuICAgIGxldCBmaW5hbFpvbmVTaWRlID0gdGhpcy5jdXJyZW50Wm9uZVNoYXBlLnNpZGUgLyBzaHJpbmtDb2VmZmljaWVudDtcclxuICAgIGNvbnN0IGZpbmFsWm9uZVNpZGVSb3VuZGVkID0gTWF0aC5yb3VuZChmaW5hbFpvbmVTaWRlKTtcclxuICAgIGZpbmFsWm9uZVNpZGUgPSBmaW5hbFpvbmVTaWRlUm91bmRlZCA8PSBsYXN0Wm9uZVNpZGUgPyBsYXN0Wm9uZVNpZGUgOiBmaW5hbFpvbmVTaWRlUm91bmRlZDtcclxuXHJcbiAgICAvLyDQlNC70Y8g0YHQu9GD0YfQsNGPINC10YHQu9C4INC90YPQttC90LAg0YbQtdC90YLRgNCw0LvRjNC90LDRjyDRgtC+0YfQutCwXHJcbiAgICAvLyBmaW5hbFpvbmVTaWRlID0gZmluYWxab25lU2lkZVJvdW5kZWQgPD0gbGFzdFpvbmVTaWRlXHJcbiAgICAvLyA/IGxhc3Rab25lU2lkZSA6IGZpbmFsWm9uZVNpZGVSb3VuZGVkICUgMiAhPT0gMFxyXG4gICAgLy8gPyBmaW5hbFpvbmVTaWRlUm91bmRlZCA6IGZpbmFsWm9uZVNpZGVSb3VuZGVkIC0gMTtcclxuXHJcbiAgICBjb25zdCBtaW5Cb3VuZFggPSB0aGlzLmN1cnJlbnRab25lU2hhcGUudXBwZXJMZWZ0UG9pbnQueDtcclxuICAgIGNvbnN0IG1heEJvdW5kWCA9IHRoaXMuY3VycmVudFpvbmVTaGFwZS5sb3dlclJpZ2h0UG9pbnQueCAtIGZpbmFsWm9uZVNpZGUgKyAyO1xyXG4gICAgY29uc3QgbWluQm91bmRZID0gdGhpcy5jdXJyZW50Wm9uZVNoYXBlLnVwcGVyTGVmdFBvaW50Lnk7XHJcbiAgICBjb25zdCBtYXhCb3VuZFkgPSB0aGlzLmN1cnJlbnRab25lU2hhcGUubG93ZXJSaWdodFBvaW50LnkgLSBmaW5hbFpvbmVTaWRlICsgMjtcclxuXHJcbiAgICBjb25zdCBmaW5hbFpvbmVYMSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXhCb3VuZFggLSBtaW5Cb3VuZFgpICsgbWluQm91bmRYKTtcclxuICAgIGNvbnN0IGZpbmFsWm9uZVkxID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heEJvdW5kWSAtIG1pbkJvdW5kWSkgKyBtaW5Cb3VuZFkpO1xyXG5cclxuICAgIHRoaXMuZmluYWxab25lU2hhcGUudXBwZXJMZWZ0UG9pbnQueCA9IGZpbmFsWm9uZVgxO1xyXG4gICAgdGhpcy5maW5hbFpvbmVTaGFwZS51cHBlckxlZnRQb2ludC55ID0gZmluYWxab25lWTE7XHJcbiAgICB0aGlzLmZpbmFsWm9uZVNoYXBlLnNpZGUgPSBmaW5hbFpvbmVTaWRlO1xyXG4gICAgdGhpcy5maW5hbFpvbmVTaGFwZS5jYWxjdWxhdGVMb3dlclJpZ2h0UG9pbnQoKTtcclxuICB9XHJcblxyXG5cdC8qKlxyXG5cdCAqIEBmdW5jdGlvblxyXG5cdCAqIEBkZXNjcmlwdGlvbiBDYWxjdWxhdGVzIGRpc3RhbmNlcyBiZXR3ZWVuIHpvbmVzXHJcblx0ICovXHJcbiAgcHJpdmF0ZSBjYWxjdWxhdGVEaXN0YW5jZXMoKTogdm9pZCB7XHJcbiAgICB0aGlzLnRvcERpc3RhbmNlID0gTWF0aC5hYnModGhpcy5maW5hbFpvbmVTaGFwZS51cHBlckxlZnRQb2ludC55IC0gdGhpcy5jdXJyZW50Wm9uZVNoYXBlLnVwcGVyTGVmdFBvaW50LnkpO1xyXG4gICAgdGhpcy5ib3R0b21EaXN0YW5jZSA9IE1hdGguYWJzKHRoaXMuY3VycmVudFpvbmVTaGFwZS5sb3dlclJpZ2h0UG9pbnQueSAtIHRoaXMuZmluYWxab25lU2hhcGUubG93ZXJSaWdodFBvaW50LnkpO1xyXG4gICAgdGhpcy5sZWZ0RGlzdGFuY2UgPSBNYXRoLmFicyh0aGlzLmZpbmFsWm9uZVNoYXBlLnVwcGVyTGVmdFBvaW50LnggLSB0aGlzLmN1cnJlbnRab25lU2hhcGUudXBwZXJMZWZ0UG9pbnQueCk7XHJcbiAgICB0aGlzLnJpZ2h0RGlzdGFuY2UgPSBNYXRoLmFicyh0aGlzLmN1cnJlbnRab25lU2hhcGUubG93ZXJSaWdodFBvaW50LnggLSB0aGlzLmZpbmFsWm9uZVNoYXBlLmxvd2VyUmlnaHRQb2ludC54KTtcclxuICB9XHJcblxyXG5cdC8qKlxyXG5cdCAqIEBmdW5jdGlvblxyXG5cdCAqIEBkZXNjcmlwdGlvbiBDYWxjdWxhdGVzIHRoZSByYXRpbyBiZXR3ZWVuIHRoZSB2ZXJ0aWNhbCBkaXN0YW5jZXMgb2Ygem9uZXNcclxuXHQgKi9cclxuICBwcml2YXRlIGNhbGN1bGF0ZVZlcnRpY2FsRGlzdGFuY2VzUmF0aW8oKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy50b3BEaXN0YW5jZSA8PSAwIHx8IHRoaXMuYm90dG9tRGlzdGFuY2UgPD0gMCkge1xyXG4gICAgICB0aGlzLnZlcnRpY2FsRGlzdGFuY2VzUmF0aW8gPSAwO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgIGNvbnN0IG1heCA9IE1hdGgubWF4KHRoaXMudG9wRGlzdGFuY2UsIHRoaXMuYm90dG9tRGlzdGFuY2UpO1xyXG4gICAgICBjb25zdCBtaW4gPSBNYXRoLm1pbih0aGlzLnRvcERpc3RhbmNlLCB0aGlzLmJvdHRvbURpc3RhbmNlKTtcclxuICAgICAgdGhpcy52ZXJ0aWNhbERpc3RhbmNlc1JhdGlvID0gTWF0aC5mbG9vcihtYXggLyBtaW4pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcblx0LyoqXHJcblx0ICogQGZ1bmN0aW9uXHJcblx0ICogQGRlc2NyaXB0aW9uIENhbGN1bGF0ZXMgdGhlIHJhdGlvIGJldHdlZW4gdGhlIGhvcml6b250YWwgZGlzdGFuY2VzIG9mIHpvbmVzXHJcblx0ICovXHJcbiAgcHJpdmF0ZSBjYWxjdWxhdGVIb3Jpem9udGFsRGlzdGFuY2VzUmF0aW8oKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5sZWZ0RGlzdGFuY2UgPD0gMCB8fCB0aGlzLnJpZ2h0RGlzdGFuY2UgPD0gMCkge1xyXG4gICAgICB0aGlzLmhvcml6b250YWxEaXN0YW5jZXNSYXRpbyA9IDA7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgY29uc3QgbWF4ID0gTWF0aC5tYXgodGhpcy5sZWZ0RGlzdGFuY2UsIHRoaXMucmlnaHREaXN0YW5jZSk7XHJcbiAgICAgIGNvbnN0IG1pbiA9IE1hdGgubWluKHRoaXMubGVmdERpc3RhbmNlLCB0aGlzLnJpZ2h0RGlzdGFuY2UpO1xyXG4gICAgICB0aGlzLmhvcml6b250YWxEaXN0YW5jZXNSYXRpbyA9IE1hdGguZmxvb3IobWF4IC8gbWluKTtcclxuICAgIH1cclxuICB9XHJcblxyXG5cdC8qKlxyXG5cdCAqIEBmdW5jdGlvblxyXG5cdCAqIEBwYXJhbSB7YXJyYXl9IGxvY2F0aW9uIEdhbWUgbG9jYXRpb24gZm9yIHByb2Nlc3NpbmdcclxuXHQgKiBAcGFyYW0geyp9IGZpbGxpbmdPYmplY3QgT2JqZWN0IHRvIGZpbGwgYW4gYXJlYSBvdXRzaWRlIHRoZSB6b25lXHJcblx0ICogQHBhcmFtIHtudW1iZXJ9IGxhc3Rab25lU2lkZSBWYWx1ZSBvZiB0aGUgbGFzdCB6b25lIHNpZGVcclxuXHQgKiBAZGVzY3JpcHRpb24gRmlsbCBhbiBhcmVhIG91dHNpZGUgdGhlIGN1cnJlbnQgem9uZVxyXG5cdCAqL1xyXG4gIHByaXZhdGUgY29udGludWVDdXJyZW50U3RhZ2UobG9jYXRpb246IEFycmF5PGFueT4sIGZpbGxpbmdPYmplY3Q6IGFueSwgbGFzdFpvbmVTaWRlOiBudW1iZXIpOiB2b2lkIHtcclxuICAgIGNvbnN0IHNocmlua1N0ZXBzID0ge1xyXG4gICAgICB0b3BTdGVwOiAwLFxyXG4gICAgICBib3R0b21TdGVwOiAwLFxyXG4gICAgICBsZWZ0U3RlcDogMCxcclxuICAgICAgcmlnaHRTdGVwOiAwXHJcbiAgICB9O1xyXG5cclxuICAgIC8vIFZlcnRpY2FsXHJcblxyXG4gICAgdGhpcy5zaHJpbmtWZXJ0aWNhbGx5KGxvY2F0aW9uLCBmaWxsaW5nT2JqZWN0LCBzaHJpbmtTdGVwcyk7XHJcblxyXG4gICAgLy8gSG9yaXpvbnRhbFxyXG5cclxuICAgIHRoaXMuc2hyaW5rSG9yaXpvbnRhbGx5KGxvY2F0aW9uLCBmaWxsaW5nT2JqZWN0LCBzaHJpbmtTdGVwcyk7XHJcblxyXG4gICAgLy8gU2hyaW5rIHNpbmdsZSBzaXplIHpvbmVcclxuXHJcbiAgICB0aGlzLnNocmlua1NpbmdsZVNpemVab25lKGxvY2F0aW9uLCBmaWxsaW5nT2JqZWN0LCBsYXN0Wm9uZVNpZGUpO1xyXG5cclxuICAgIC8vIFVwZGF0ZSBjdXJyZW50Wm9uZVNoYXBlXHJcblxyXG4gICAgdGhpcy5jYWxjdWxhdGVDdXJyZW50Wm9uZVNoYXBlKHNocmlua1N0ZXBzKTtcclxuXHJcbiAgICAvLyBDaGVjayBpZiBjdXJyZW50IHpvbmUgcmVhY2hlcyBmaW5hbCB6b25lXHJcblxyXG4gICAgdGhpcy5jaGVja0lzRmluYWxab25lUmVhY2hlZCgpO1xyXG4gIH1cclxuXHJcblx0LyoqXHJcblx0ICogQGZ1bmN0aW9uXHJcblx0ICogQHBhcmFtIHthcnJheX0gbG9jYXRpb24gR2FtZSBsb2NhdGlvbiBmb3IgcHJvY2Vzc2luZ1xyXG5cdCAqIEBwYXJhbSB7Kn0gZmlsbGluZ09iamVjdCBPYmplY3QgdG8gZmlsbCBhbiBhcmVhIG91dHNpZGUgdGhlIHpvbmVcclxuXHQgKiBAcGFyYW0ge29iamVjdH0gc2hyaW5rU3RlcHMgVmFsdWVzIG9mIHNocmlua3MgZm9yIGVhY2ggc2lkZVxyXG5cdCAqIEBkZXNjcmlwdGlvbiBTaHJpbmtzIGxvY2F0aW9uIHZlcnRpY2FsbHlcclxuXHQgKi9cclxuICBwcml2YXRlIHNocmlua1ZlcnRpY2FsbHkobG9jYXRpb246IEFycmF5PGFueT4sIGZpbGxpbmdPYmplY3Q6IGFueSwgc2hyaW5rU3RlcHM6IGFueSk6IHZvaWQge1xyXG4gICAgY29uc3QgaXNUb3BTaWRlUmVhY2hlZCA9ICh0aGlzLmN1cnJlbnRab25lU2hhcGUudXBwZXJMZWZ0UG9pbnQueSA9PT0gdGhpcy5maW5hbFpvbmVTaGFwZS51cHBlckxlZnRQb2ludC55KTtcclxuICAgIGNvbnN0IGlzQm90dG9tU2lkZVJlYWNoZWQgPSAodGhpcy5jdXJyZW50Wm9uZVNoYXBlLmxvd2VyUmlnaHRQb2ludC55ID09PSB0aGlzLmZpbmFsWm9uZVNoYXBlLmxvd2VyUmlnaHRQb2ludC55KTtcclxuICAgIGNvbnN0IGlzQ29tbW9uU3RlcCA9ICh0aGlzLnZlcnRpY2FsU3RlcENvdW50ID09PSB0aGlzLnZlcnRpY2FsRGlzdGFuY2VzUmF0aW8pO1xyXG5cclxuICAgIGNvbnN0IHVwcGVyWCA9IHRoaXMuY3VycmVudFpvbmVTaGFwZS51cHBlckxlZnRQb2ludC54O1xyXG4gICAgY29uc3QgdXBwZXJZID0gdGhpcy5jdXJyZW50Wm9uZVNoYXBlLnVwcGVyTGVmdFBvaW50Lnk7XHJcbiAgICBjb25zdCBsb3dlclggPSB0aGlzLmN1cnJlbnRab25lU2hhcGUubG93ZXJSaWdodFBvaW50Lng7XHJcbiAgICBjb25zdCBsb3dlclkgPSB0aGlzLmN1cnJlbnRab25lU2hhcGUubG93ZXJSaWdodFBvaW50Lnk7XHJcblxyXG4gICAgaWYgKCFpc1RvcFNpZGVSZWFjaGVkICYmICFpc0JvdHRvbVNpZGVSZWFjaGVkKSB7XHJcbiAgICAgIHRoaXMudmVydGljYWxTdGVwQ291bnQrKztcclxuXHJcbiAgICAgIGlmICh0aGlzLnRvcERpc3RhbmNlID4gdGhpcy5ib3R0b21EaXN0YW5jZSkge1xyXG4gICAgICAgIHNocmlua1N0ZXBzLnRvcFN0ZXArKztcclxuXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IHVwcGVyWDsgaSA8PSBsb3dlclg7IGkrKykge1xyXG4gICAgICAgICAgbG9jYXRpb25baV1bdXBwZXJZXSA9IGZpbGxpbmdPYmplY3Q7XHJcblxyXG4gICAgICAgICAgaWYgKGlzQ29tbW9uU3RlcCkge1xyXG4gICAgICAgICAgICBsb2NhdGlvbltpXVtsb3dlclldID0gZmlsbGluZ09iamVjdDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChpc0NvbW1vblN0ZXApIHtcclxuICAgICAgICAgIHNocmlua1N0ZXBzLmJvdHRvbVN0ZXArKztcclxuICAgICAgICAgIHRoaXMudmVydGljYWxTdGVwQ291bnQgPSAwO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBlbHNlIGlmICh0aGlzLnRvcERpc3RhbmNlIDwgdGhpcy5ib3R0b21EaXN0YW5jZSkge1xyXG4gICAgICAgIHNocmlua1N0ZXBzLmJvdHRvbVN0ZXArKztcclxuXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IHVwcGVyWDsgaSA8PSBsb3dlclg7IGkrKykge1xyXG4gICAgICAgICAgbG9jYXRpb25baV1bbG93ZXJZXSA9IGZpbGxpbmdPYmplY3Q7XHJcblxyXG4gICAgICAgICAgaWYgKGlzQ29tbW9uU3RlcCkge1xyXG4gICAgICAgICAgICBsb2NhdGlvbltpXVt1cHBlclldID0gZmlsbGluZ09iamVjdDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChpc0NvbW1vblN0ZXApIHtcclxuICAgICAgICAgIHNocmlua1N0ZXBzLnRvcFN0ZXArKztcclxuICAgICAgICAgIHRoaXMudmVydGljYWxTdGVwQ291bnQgPSAwO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBlbHNlIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gdXBwZXJYOyBpIDw9IGxvd2VyWDsgaSsrKSB7XHJcbiAgICAgICAgICBsb2NhdGlvbltpXVt1cHBlclldID0gZmlsbGluZ09iamVjdDtcclxuICAgICAgICAgIGxvY2F0aW9uW2ldW2xvd2VyWV0gPSBmaWxsaW5nT2JqZWN0O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgc2hyaW5rU3RlcHMudG9wU3RlcCsrO1xyXG4gICAgICAgIHNocmlua1N0ZXBzLmJvdHRvbVN0ZXArKztcclxuICAgICAgICB0aGlzLnZlcnRpY2FsU3RlcENvdW50ID0gMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoaXNUb3BTaWRlUmVhY2hlZCAmJiAhaXNCb3R0b21TaWRlUmVhY2hlZCkge1xyXG4gICAgICBmb3IgKGxldCBpID0gdXBwZXJYOyBpIDw9IGxvd2VyWDsgaSsrKSB7XHJcbiAgICAgICAgbG9jYXRpb25baV1bbG93ZXJZXSA9IGZpbGxpbmdPYmplY3Q7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHNocmlua1N0ZXBzLmJvdHRvbVN0ZXArKztcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKCFpc1RvcFNpZGVSZWFjaGVkICYmIGlzQm90dG9tU2lkZVJlYWNoZWQpIHtcclxuICAgICAgZm9yIChsZXQgaSA9IHVwcGVyWDsgaSA8PSBsb3dlclg7IGkrKykge1xyXG4gICAgICAgIGxvY2F0aW9uW2ldW3VwcGVyWV0gPSBmaWxsaW5nT2JqZWN0O1xyXG4gICAgICB9XHJcblxyXG4gICAgICBzaHJpbmtTdGVwcy50b3BTdGVwKys7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHQvKipcclxuXHQgKiBAZnVuY3Rpb25cclxuXHQgKiBAcGFyYW0ge2FycmF5fSBsb2NhdGlvbiBHYW1lIGxvY2F0aW9uIGZvciBwcm9jZXNzaW5nXHJcblx0ICogQHBhcmFtIHsqfSBmaWxsaW5nT2JqZWN0IE9iamVjdCB0byBmaWxsIGFuIGFyZWEgb3V0c2lkZSB0aGUgem9uZVxyXG5cdCAqIEBwYXJhbSB7b2JqZWN0fSBzaHJpbmtTdGVwcyBWYWx1ZXMgb2Ygc2hyaW5rcyBmb3IgZWFjaCBzaWRlXHJcblx0ICogQGRlc2NyaXB0aW9uIFNocmlua3MgbG9jYXRpb24gaG9yaXpvbnRhbGx5XHJcblx0ICovXHJcbiAgcHJpdmF0ZSBzaHJpbmtIb3Jpem9udGFsbHkobG9jYXRpb246IEFycmF5PGFueT4sIGZpbGxpbmdPYmplY3Q6IGFueSwgc2hyaW5rU3RlcHM6IGFueSk6IHZvaWQge1xyXG4gICAgY29uc3QgaXNMZWZ0U2lkZVJlYWNoZWQgPSAodGhpcy5jdXJyZW50Wm9uZVNoYXBlLnVwcGVyTGVmdFBvaW50LnggPT09IHRoaXMuZmluYWxab25lU2hhcGUudXBwZXJMZWZ0UG9pbnQueCk7XHJcbiAgICBjb25zdCBpc1JpZ2h0U2lkZVJlYWNoZWQgPSAodGhpcy5jdXJyZW50Wm9uZVNoYXBlLmxvd2VyUmlnaHRQb2ludC54ID09PSB0aGlzLmZpbmFsWm9uZVNoYXBlLmxvd2VyUmlnaHRQb2ludC54KTtcclxuICAgIGNvbnN0IGlzQ29tbW9uU3RlcCA9ICh0aGlzLmhvcml6b250YWxTdGVwQ291bnQgPT09IHRoaXMuaG9yaXpvbnRhbERpc3RhbmNlc1JhdGlvKTtcclxuXHJcbiAgICBjb25zdCB1cHBlclggPSB0aGlzLmN1cnJlbnRab25lU2hhcGUudXBwZXJMZWZ0UG9pbnQueDtcclxuICAgIGNvbnN0IHVwcGVyWSA9IHRoaXMuY3VycmVudFpvbmVTaGFwZS51cHBlckxlZnRQb2ludC55O1xyXG4gICAgY29uc3QgbG93ZXJYID0gdGhpcy5jdXJyZW50Wm9uZVNoYXBlLmxvd2VyUmlnaHRQb2ludC54O1xyXG4gICAgY29uc3QgbG93ZXJZID0gdGhpcy5jdXJyZW50Wm9uZVNoYXBlLmxvd2VyUmlnaHRQb2ludC55O1xyXG5cclxuICAgIGlmICghaXNMZWZ0U2lkZVJlYWNoZWQgJiYgIWlzUmlnaHRTaWRlUmVhY2hlZCkge1xyXG4gICAgICB0aGlzLmhvcml6b250YWxTdGVwQ291bnQrKztcclxuXHJcbiAgICAgIGlmICh0aGlzLmxlZnREaXN0YW5jZSA+IHRoaXMucmlnaHREaXN0YW5jZSkge1xyXG4gICAgICAgIHNocmlua1N0ZXBzLmxlZnRTdGVwKys7XHJcblxyXG4gICAgICAgIGZvciAobGV0IGkgPSB1cHBlclk7IGkgPD0gbG93ZXJZOyBpKyspIHtcclxuICAgICAgICAgIGxvY2F0aW9uW3VwcGVyWF1baV0gPSBmaWxsaW5nT2JqZWN0O1xyXG5cclxuICAgICAgICAgIGlmIChpc0NvbW1vblN0ZXApIHtcclxuICAgICAgICAgICAgbG9jYXRpb25bbG93ZXJYXVtpXSA9IGZpbGxpbmdPYmplY3Q7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoaXNDb21tb25TdGVwKSB7XHJcbiAgICAgICAgICBzaHJpbmtTdGVwcy5yaWdodFN0ZXArKztcclxuICAgICAgICAgIHRoaXMuaG9yaXpvbnRhbFN0ZXBDb3VudCA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGVsc2UgaWYgKHRoaXMubGVmdERpc3RhbmNlIDwgdGhpcy5yaWdodERpc3RhbmNlKSB7XHJcbiAgICAgICAgc2hyaW5rU3RlcHMucmlnaHRTdGVwKys7XHJcblxyXG4gICAgICAgIGZvciAobGV0IGkgPSB1cHBlclk7IGkgPD0gbG93ZXJZOyBpKyspIHtcclxuICAgICAgICAgIGxvY2F0aW9uW2xvd2VyWF1baV0gPSBmaWxsaW5nT2JqZWN0O1xyXG5cclxuICAgICAgICAgIGlmIChpc0NvbW1vblN0ZXApIHtcclxuICAgICAgICAgICAgbG9jYXRpb25bdXBwZXJYXVtpXSA9IGZpbGxpbmdPYmplY3Q7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoaXNDb21tb25TdGVwKSB7XHJcbiAgICAgICAgICBzaHJpbmtTdGVwcy5sZWZ0U3RlcCsrO1xyXG4gICAgICAgICAgdGhpcy5ob3Jpem9udGFsU3RlcENvdW50ID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgZWxzZSB7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IHVwcGVyWTsgaSA8PSBsb3dlclk7IGkrKykge1xyXG4gICAgICAgICAgbG9jYXRpb25bdXBwZXJYXVtpXSA9IGZpbGxpbmdPYmplY3Q7XHJcbiAgICAgICAgICBsb2NhdGlvbltsb3dlclhdW2ldID0gZmlsbGluZ09iamVjdDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHNocmlua1N0ZXBzLmxlZnRTdGVwKys7XHJcbiAgICAgICAgc2hyaW5rU3RlcHMucmlnaHRTdGVwKys7XHJcbiAgICAgICAgdGhpcy5ob3Jpem9udGFsU3RlcENvdW50ID0gMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoaXNMZWZ0U2lkZVJlYWNoZWQgJiYgIWlzUmlnaHRTaWRlUmVhY2hlZCkge1xyXG4gICAgICBmb3IgKGxldCBpID0gdXBwZXJZOyBpIDw9IGxvd2VyWTsgaSsrKSB7XHJcbiAgICAgICAgbG9jYXRpb25bbG93ZXJYXVtpXSA9IGZpbGxpbmdPYmplY3Q7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHNocmlua1N0ZXBzLnJpZ2h0U3RlcCsrO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoIWlzTGVmdFNpZGVSZWFjaGVkICYmIGlzUmlnaHRTaWRlUmVhY2hlZCkge1xyXG4gICAgICBmb3IgKGxldCBpID0gdXBwZXJZOyBpIDw9IGxvd2VyWTsgaSsrKSB7XHJcbiAgICAgICAgbG9jYXRpb25bdXBwZXJYXVtpXSA9IGZpbGxpbmdPYmplY3Q7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHNocmlua1N0ZXBzLmxlZnRTdGVwKys7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHQvKipcclxuXHQgKiBAZnVuY3Rpb25cclxuXHQgKiBAcGFyYW0ge2FycmF5fSBsb2NhdGlvbiBHYW1lIGxvY2F0aW9uIGZvciBwcm9jZXNzaW5nXHJcblx0ICogQHBhcmFtIHsqfSBmaWxsaW5nT2JqZWN0IE9iamVjdCB0byBmaWxsIGFuIGFyZWEgb3V0c2lkZSB0aGUgem9uZVxyXG5cdCAqIEBwYXJhbSB7bnVtYmVyfSBsYXN0Wm9uZVNpZGUgVmFsdWUgb2YgdGhlIGxhc3Qgem9uZSBzaWRlXHJcblx0ICogQGRlc2NyaXB0aW9uIFNocmlua3Mgem9uZSB3aGVuIGl0cyBzaXplIGVxdWFscyBvbmVcclxuXHQgKi9cclxuICBwcml2YXRlIHNocmlua1NpbmdsZVNpemVab25lKGxvY2F0aW9uOiBBcnJheTxhbnk+LCBmaWxsaW5nT2JqZWN0OiBhbnksIGxhc3Rab25lU2lkZTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5jdXJyZW50Wm9uZVNoYXBlLnNpZGUgPT09IDEgJiYgbGFzdFpvbmVTaWRlIDwgMSkge1xyXG4gICAgICBsb2NhdGlvblt0aGlzLmN1cnJlbnRab25lU2hhcGUudXBwZXJMZWZ0UG9pbnQueF1bdGhpcy5jdXJyZW50Wm9uZVNoYXBlLnVwcGVyTGVmdFBvaW50LnldID0gZmlsbGluZ09iamVjdDtcclxuICAgIH1cclxuICB9XHJcblxyXG5cdC8qKlxyXG5cdCAqIEBmdW5jdGlvblxyXG5cdCAqIEBwYXJhbSB7b2JqZWN0fSBzaHJpbmtTdGVwcyBWYWx1ZXMgb2Ygc2hyaW5rcyBmb3IgZWFjaCBzaWRlXHJcblx0ICogQGRlc2NyaXB0aW9uIENhbGN1bGF0ZSBwYXJhbWV0ZXJzIG9mIHRoZSBjdXJyZW50IHpvbmVcclxuXHQgKi9cclxuICBwcml2YXRlIGNhbGN1bGF0ZUN1cnJlbnRab25lU2hhcGUoc2hyaW5rU3RlcHM6IGFueSk6IHZvaWQge1xyXG4gICAgdGhpcy5jdXJyZW50Wm9uZVNoYXBlLnVwcGVyTGVmdFBvaW50LnggKz0gc2hyaW5rU3RlcHMubGVmdFN0ZXA7XHJcbiAgICB0aGlzLmN1cnJlbnRab25lU2hhcGUudXBwZXJMZWZ0UG9pbnQueSArPSBzaHJpbmtTdGVwcy50b3BTdGVwO1xyXG4gICAgdGhpcy5jdXJyZW50Wm9uZVNoYXBlLmxvd2VyUmlnaHRQb2ludC54IC09IHNocmlua1N0ZXBzLnJpZ2h0U3RlcDtcclxuICAgIHRoaXMuY3VycmVudFpvbmVTaGFwZS5sb3dlclJpZ2h0UG9pbnQueSAtPSBzaHJpbmtTdGVwcy5ib3R0b21TdGVwO1xyXG4gICAgdGhpcy5jdXJyZW50Wm9uZVNoYXBlLmNhbGN1bGF0ZVNpZGUoKTtcclxuICB9XHJcblxyXG5cdC8qKlxyXG5cdCAqIEBmdW5jdGlvblxyXG5cdCAqIEBkZXNjcmlwdGlvbiBDaGVjayBpZiB0aGUgY3VycmVudCB6b25lIHJlYWNoZXMgdGhlIGZpbmFsIHpvbmVcclxuXHQgKi9cclxuICBwcml2YXRlIGNoZWNrSXNGaW5hbFpvbmVSZWFjaGVkKCk6IHZvaWQge1xyXG4gICAgaWYgKFxyXG4gICAgICB0aGlzLmN1cnJlbnRab25lU2hhcGUudXBwZXJMZWZ0UG9pbnQueCA9PT0gdGhpcy5maW5hbFpvbmVTaGFwZS51cHBlckxlZnRQb2ludC54XHJcbiAgICAgICYmIHRoaXMuY3VycmVudFpvbmVTaGFwZS51cHBlckxlZnRQb2ludC55ID09PSB0aGlzLmZpbmFsWm9uZVNoYXBlLnVwcGVyTGVmdFBvaW50LnlcclxuICAgICAgJiYgdGhpcy5jdXJyZW50Wm9uZVNoYXBlLnNpZGUgPT09IHRoaXMuZmluYWxab25lU2hhcGUuc2lkZVxyXG4gICAgICAmJiB0aGlzLmN1cnJlbnRab25lU2hhcGUubG93ZXJSaWdodFBvaW50LnggPT09IHRoaXMuZmluYWxab25lU2hhcGUubG93ZXJSaWdodFBvaW50LnhcclxuICAgICAgJiYgdGhpcy5jdXJyZW50Wm9uZVNoYXBlLmxvd2VyUmlnaHRQb2ludC55ID09PSB0aGlzLmZpbmFsWm9uZVNoYXBlLmxvd2VyUmlnaHRQb2ludC55XHJcbiAgICApIHtcclxuICAgICAgdGhpcy5pc05ld1N0YWdlID0gdHJ1ZTtcclxuICAgIH1cclxuICB9XHJcblxyXG5cdC8qKlxyXG5cdCAqIEBmdW5jdGlvblxyXG5cdCAqIEBwYXJhbSB7YXJyYXl9IGxvY2F0aW9uIEdhbWUgbG9jYXRpb24gZm9yIHByb2Nlc3NpbmdcclxuXHQgKiBAcGFyYW0geyp9IGJvcmRlckZpbGxpbmdPYmplY3QgT2JqZWN0IHRvIGZpbGwgYSBib3JkZXIgb2YgdGhlIHpvbmVcclxuXHQgKiBAZGVzY3JpcHRpb24gRmlsbHMgYm9yZGVyIGNlbGxzIG9mIHRoZSBmaW5hbCB6b25lIHdpdGggZ2l2ZW4gb2JqZWN0XHJcblx0ICovXHJcbiAgcHJpdmF0ZSBkcmF3Wm9uZUJvcmRlcmxpbmUobG9jYXRpb246IEFycmF5PGFueT4sIGJvcmRlckZpbGxpbmdPYmplY3Q6IGFueSk6IHZvaWQge1xyXG4gICAgZm9yIChsZXQgaSA9IHRoaXMuZmluYWxab25lU2hhcGUudXBwZXJMZWZ0UG9pbnQueDsgaSA8PSB0aGlzLmZpbmFsWm9uZVNoYXBlLmxvd2VyUmlnaHRQb2ludC54OyBpKyspIHtcclxuICAgICAgbG9jYXRpb25baV1bdGhpcy5maW5hbFpvbmVTaGFwZS51cHBlckxlZnRQb2ludC55XSA9IGJvcmRlckZpbGxpbmdPYmplY3Q7XHJcbiAgICAgIGxvY2F0aW9uW2ldW3RoaXMuZmluYWxab25lU2hhcGUubG93ZXJSaWdodFBvaW50LnldID0gYm9yZGVyRmlsbGluZ09iamVjdDtcclxuICAgIH1cclxuICAgIGZvciAobGV0IGkgPSB0aGlzLmZpbmFsWm9uZVNoYXBlLnVwcGVyTGVmdFBvaW50Lnk7IGkgPD0gdGhpcy5maW5hbFpvbmVTaGFwZS5sb3dlclJpZ2h0UG9pbnQueTsgaSsrKSB7XHJcbiAgICAgIGxvY2F0aW9uW3RoaXMuZmluYWxab25lU2hhcGUudXBwZXJMZWZ0UG9pbnQueF1baV0gPSBib3JkZXJGaWxsaW5nT2JqZWN0O1xyXG4gICAgICBsb2NhdGlvblt0aGlzLmZpbmFsWm9uZVNoYXBlLmxvd2VyUmlnaHRQb2ludC54XVtpXSA9IGJvcmRlckZpbGxpbmdPYmplY3Q7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHQvKipcclxuXHQgKiBAZnVuY3Rpb25cclxuXHQgKiBAcGFyYW0ge2FycmF5fSBsb2NhdGlvbiBHYW1lIGxvY2F0aW9uIGZvciBwcm9jZXNzaW5nXHJcblx0ICogQHBhcmFtIHsqfSBjbGVhbmVyT2JqZWN0IE9iamVjdCB0byBjbGVhbiB0aGUgYm9yZGVyIG9mIHRoZSB6b25lXHJcblx0ICogQGRlc2NyaXB0aW9uIFJlbW92ZXMgdGhlIGRyYXduIGJvcmRlciBvZiB0aGUgZmluYWwgem9uZVxyXG5cdCAqL1xyXG4gIHByaXZhdGUgY2xlYXJCb3JkZXIobG9jYXRpb246IEFycmF5PGFueT4sIGNsZWFuZXJPYmplY3Q6IGFueSk6IHZvaWQge1xyXG4gICAgZm9yIChsZXQgaSA9IHRoaXMuZmluYWxab25lU2hhcGUudXBwZXJMZWZ0UG9pbnQueDsgaSA8PSB0aGlzLmZpbmFsWm9uZVNoYXBlLmxvd2VyUmlnaHRQb2ludC54OyBpKyspIHtcclxuICAgICAgbG9jYXRpb25baV1bdGhpcy5maW5hbFpvbmVTaGFwZS51cHBlckxlZnRQb2ludC55XSA9IGNsZWFuZXJPYmplY3Q7XHJcbiAgICAgIGxvY2F0aW9uW2ldW3RoaXMuZmluYWxab25lU2hhcGUubG93ZXJSaWdodFBvaW50LnldID0gY2xlYW5lck9iamVjdDtcclxuICAgIH1cclxuICAgIGZvciAobGV0IGkgPSB0aGlzLmZpbmFsWm9uZVNoYXBlLnVwcGVyTGVmdFBvaW50Lnk7IGkgPD0gdGhpcy5maW5hbFpvbmVTaGFwZS5sb3dlclJpZ2h0UG9pbnQueTsgaSsrKSB7XHJcbiAgICAgIGxvY2F0aW9uW3RoaXMuZmluYWxab25lU2hhcGUudXBwZXJMZWZ0UG9pbnQueF1baV0gPSBjbGVhbmVyT2JqZWN0O1xyXG4gICAgICBsb2NhdGlvblt0aGlzLmZpbmFsWm9uZVNoYXBlLmxvd2VyUmlnaHRQb2ludC54XVtpXSA9IGNsZWFuZXJPYmplY3Q7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgLy8jcmVnaW9uIEdhcmJhZ2VcclxuXHJcbiAgLy8gLyoqXHJcbiAgLy8gICogcHJpdmF0ZSBzdGF0aWMgZmllbGRcclxuICAvLyAgKlxyXG4gIC8vICAqIFZhbHVlIG9mIHRoZSBjdXJyZW50IHpvbmUgcmFkaXVzXHJcbiAgLy8gICovXHJcbiAgLy8gX3pvbmVSYWRpdXM6IDAsXHJcblxyXG4gIC8vIC8qKlxyXG4gIC8vICAqIHByaXZhdGUgc3RhdGljIGZpZWxkXHJcbiAgLy8gICpcclxuICAvLyAgKiBDb29yZGluYXRlcyBvZiB0aGUgem9uZSBjZW50ZXJcclxuICAvLyAgKi9cclxuICAvLyBfem9uZUNlbnRlclBvaW50OiB7XHJcbiAgLy8gXHR4OiAwLFxyXG4gIC8vIFx0eTogMFxyXG4gIC8vIH1cclxuXHJcbiAgLy8gLyoqXHJcbiAgLy8gICogcHJpdmF0ZSBzdGF0aWMgZmllbGRcclxuICAvLyAgKlxyXG4gIC8vICAqIENvb3JkaW5hdGVzIG9mIHRoZSBmaXJzdCBwb2ludCBpbnNpZGUgdGhlIHpvbmVcclxuICAvLyAgKi9cclxuICAvLyBfem9uZVVwcGVyTGVmdFBvaW50OiB7XHJcbiAgLy8gXHR4OiAwLFxyXG4gIC8vIFx0eTowXHJcbiAgLy8gfVxyXG5cclxuICAvLyAvKipcclxuICAvLyAgKiBwcml2YXRlIHN0YXRpYyBmaWVsZFxyXG4gIC8vICAqXHJcbiAgLy8gICogVmFsdWUgb2YgdGhlIGN1cnJlbnQgem9uZSByYWRpdXNcclxuICAvLyAgKi9cclxuICAvLyBnZXQgem9uZVJhZGl1cygpIHtcclxuICAvLyBcdHJldHVybiB0aGlzLl96b25lUmFkaXVzO1xyXG4gIC8vIH1cclxuICAvLyBzZXQgem9uZVJhZGl1cyh2YWx1ZSkge1xyXG4gIC8vIFx0dW5sb2NrT2JqZWN0RmllbGQodGhpcywgXCJfem9uZVJhZGl1c1wiKTtcclxuXHJcbiAgLy8gXHR0aGlzLl96b25lUmFkaXVzID0gdmFsdWU7XHJcblxyXG4gIC8vIFx0bG9ja09iamVjdEZpZWxkKHRoaXMsIFwiX3pvbmVSYWRpdXNcIik7XHJcbiAgLy8gfVxyXG5cclxuICAvLyAvKipcclxuICAvLyAgKiBwcml2YXRlIHN0YXRpYyBmaWVsZFxyXG4gIC8vICAqXHJcbiAgLy8gICogQ29vcmRpbmF0ZXMgb2YgdGhlIHpvbmUgY2VudGVyXHJcbiAgLy8gICovXHJcbiAgLy8gZ2V0IHpvbmVDZW50ZXJQb2ludCgpIHtcclxuICAvLyBcdHJldHVybiB0aGlzLl96b25lQ2VudGVyUG9pbnQ7XHJcbiAgLy8gfVxyXG4gIC8vIHNldCB6b25lQ2VudGVyUG9pbnQodmFsdWUpIHtcclxuICAvLyBcdHVubG9ja09iamVjdEZpZWxkKHRoaXMsIFwiX3pvbmVDZW50ZXJQb2ludFwiKTtcclxuXHJcbiAgLy8gXHR0aGlzLl96b25lQ2VudGVyUG9pbnQgPSB2YWx1ZTtcclxuXHJcbiAgLy8gXHRsb2NrT2JqZWN0RmllbGQodGhpcywgXCJfem9uZUNlbnRlclBvaW50XCIpO1xyXG4gIC8vIH1cclxuXHJcbiAgLy8gLyoqXHJcbiAgLy8gICogcHJpdmF0ZSBzdGF0aWMgZmllbGRcclxuICAvLyAgKlxyXG4gIC8vICAqIENvb3JkaW5hdGVzIG9mIHRoZSBmaXJzdCBwb2ludCBpbnNpZGUgdGhlIHpvbmVcclxuICAvLyAgKi9cclxuICAvLyBnZXQgem9uZVVwcGVyTGVmdFBvaW50KCkge1xyXG4gIC8vIFx0cmV0dXJuIHRoaXMuX3pvbmVVcHBlckxlZnRQb2ludDtcclxuICAvLyB9XHJcbiAgLy8gc2V0IHpvbmVVcHBlckxlZnRQb2ludCh2YWx1ZSkge1xyXG4gIC8vIFx0dW5sb2NrT2JqZWN0RmllbGQodGhpcywgXCJfem9uZVVwcGVyTGVmdFBvaW50XCIpO1xyXG5cclxuICAvLyBcdHRoaXMuX3pvbmVVcHBlckxlZnRQb2ludCA9IHZhbHVlO1xyXG5cclxuICAvLyBcdGxvY2tPYmplY3RGaWVsZCh0aGlzLCBcIl96b25lVXBwZXJMZWZ0UG9pbnRcIik7XHJcbiAgLy8gfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxufTsiLCJpbXBvcnQgeyBab25lIH0gZnJvbSBcIi4vem9uZS96b25lXCI7XHJcblxyXG5jb25zdCBsb2NhdGlvblNpZGUgPSAxODtcclxuY29uc3Qgc2hyaW5rQ29lZmZpY2llbnQgPSAxLjQ7XHJcbmNvbnN0IGxhc3Rab25lU2lkZSA9IDA7XHJcbmNvbnN0IGZpbGxpbmdPYmplY3QgPSBcIuKIjlwiO1xyXG5jb25zdCBib3JkZXJGaWxsaW5nT2JqZWN0ID0gMDtcclxuY29uc3QgY2xlYW5lck9iamVjdCA9IFwiIFwiO1xyXG5cclxubGV0IGdhbWVMb2NhdGlvbiA9IG5ldyBBcnJheShsb2NhdGlvblNpZGUpO1xyXG5mb3IgKGxldCBpID0gMDsgaSA8IGxvY2F0aW9uU2lkZTsgaSsrKSB7XHJcbiAgZ2FtZUxvY2F0aW9uW2ldID0gbmV3IEFycmF5KGxvY2F0aW9uU2lkZSk7XHJcbn1cclxuXHJcbmZvciAobGV0IGkgPSAwOyBpIDwgbG9jYXRpb25TaWRlOyBpKyspIHtcclxuICBmb3IgKGxldCBqID0gMDsgaiA8IGxvY2F0aW9uU2lkZTsgaisrKSB7XHJcbiAgICBnYW1lTG9jYXRpb25baV1bal0gPSBcIiBcIjtcclxuICB9XHJcbn1cclxuXHJcbmNvbnN0IHpvbmUgPSBuZXcgWm9uZSgpO1xyXG5cclxuZm9yIChsZXQgaSA9IDA7IGkgPCAxOTsgaSsrKSB7XHJcbiAgKGZ1bmN0aW9uIChnYW1lTG9jYXRpb24pIHtcclxuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICBjb25zb2xlLmNsZWFyKCk7XHJcbiAgICAgIHpvbmUuc2hyaW5rKGdhbWVMb2NhdGlvbiwgc2hyaW5rQ29lZmZpY2llbnQsIGxhc3Rab25lU2lkZSwgZmlsbGluZ09iamVjdCwgYm9yZGVyRmlsbGluZ09iamVjdCwgY2xlYW5lck9iamVjdCk7XHJcbiAgICAgIGNvbnNvbGUudGFibGUoZ2FtZUxvY2F0aW9uKTtcclxuICAgIH0sIGkgKiAxMDAwKTtcclxuICB9KShnYW1lTG9jYXRpb24pO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==